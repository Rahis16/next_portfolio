{
    "sourceFile": "app/components/Navbar.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 29,
            "patches": [
                {
                    "date": 1750518076206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1750518090214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,73 @@\n+'use client'\r\n+\r\n+import React, { JSX, useState } from 'react'\r\n+import Link from 'next/link'\r\n+import { FaCode, FaProjectDiagram, FaUser, FaEnvelope, FaBars, FaTimes } from 'react-icons/fa'\r\n+\r\n+type NavItem = {\r\n+  name: string\r\n+  href: string\r\n+  icon: JSX.Element\r\n+}\r\n+\r\n+const navItems: NavItem[] = [\r\n+  { name: 'About Me', href: '#about', icon: <FaUser /> },\r\n+  { name: 'Projects', href: '#projects', icon: <FaProjectDiagram /> },\r\n+  { name: 'Skills', href: '#skills', icon: <FaCode /> },\r\n+  { name: 'Contact', href: '#contact', icon: <FaEnvelope /> }\r\n+]\r\n+\r\n+const Navbar = () => {\r\n+  const [isOpen, setIsOpen] = useState(false)\r\n+\r\n+  const toggleMenu = () => setIsOpen(!isOpen)\r\n+\r\n+  return (\r\n+    <nav className=\"bg-white shadow-md fixed top-0 left-0 right-0 z-50\">\r\n+      <div className=\"max-w-6xl mx-auto px-4 flex justify-between items-center h-16\">\r\n+        \r\n+        {/* Logo */}\r\n+        <h1 className=\"text-2xl font-bold text-blue-600\">SmartCoderRahis</h1>\r\n+\r\n+        {/* Desktop Menu */}\r\n+        <ul className=\"hidden md:flex gap-8\">\r\n+          {navItems.map((item) => (\r\n+            <li key={item.name}>\r\n+              <Link href={item.href} className=\"flex items-center gap-2 text-gray-700 hover:text-blue-600 transition\">\r\n+                {item.icon}\r\n+                {item.name}\r\n+              </Link>\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+\r\n+        {/* Mobile Menu Button */}\r\n+        <div className=\"md:hidden\">\r\n+          <button onClick={toggleMenu} className=\"text-2xl text-gray-700\">\r\n+            {isOpen ? <FaTimes /> : <FaBars />}\r\n+          </button>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Mobile Dropdown */}\r\n+      {isOpen && (\r\n+        <ul className=\"md:hidden bg-white px-4 pb-4 flex flex-col gap-4 shadow-md\">\r\n+          {navItems.map((item) => (\r\n+            <li key={item.name}>\r\n+              <Link\r\n+                href={item.href}\r\n+                onClick={() => setIsOpen(false)}\r\n+                className=\"flex items-center gap-2 text-gray-700 hover:text-blue-600 transition\"\r\n+              >\r\n+                {item.icon}\r\n+                {item.name}\r\n+              </Link>\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+      )}\r\n+    </nav>\r\n+  )\r\n+}\r\n+\r\n+export default Navbar\r\n"
                },
                {
                    "date": 1750518134006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,73 @@\n+'use client'\r\n+\r\n+import React, { JSX, useState } from 'react'\r\n+import Link from 'next/link'\r\n+import { FaCode, FaProjectDiagram, FaUser, FaEnvelope, FaBars, FaTimes } from 'react-icons/fa'\r\n+\r\n+type NavItem = {\r\n+  name: string\r\n+  href: string\r\n+  icon: JSX.Element\r\n+}\r\n+\r\n+const navItems: NavItem[] = [\r\n+  { name: 'About Me', href: '#about', icon: <FaUser /> },\r\n+  { name: 'Projects', href: '#projects', icon: <FaProjectDiagram /> },\r\n+  { name: 'Skills', href: '#skills', icon: <FaCode /> },\r\n+  { name: 'Contact', href: '#contact', icon: <FaEnvelope /> }\r\n+]\r\n+\r\n+const Navbar = () => {\r\n+  const [isOpen, setIsOpen] = useState(false)\r\n+\r\n+  const toggleMenu = () => setIsOpen(!isOpen)\r\n+\r\n+  return (\r\n+    <nav className=\"bg-white shadow-md fixed top-0 left-0 right-0 z-50\">\r\n+      <div className=\"max-w-6xl mx-auto px-4 flex justify-between items-center h-16\">\r\n+        \r\n+        {/* Logo */}\r\n+        <h1 className=\"text-2xl font-bold text-blue-600\">SmartCoderRahis</h1>\r\n+\r\n+        {/* Desktop Menu */}\r\n+        <ul className=\"hidden md:flex gap-8\">\r\n+          {navItems.map((item) => (\r\n+            <li key={item.name}>\r\n+              <Link href={item.href} className=\"flex items-center gap-2 text-gray-700 hover:text-blue-600 transition\">\r\n+                {item.icon}\r\n+                {item.name}\r\n+              </Link>\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+\r\n+        {/* Mobile Menu Button */}\r\n+        <div className=\"md:hidden\">\r\n+          <button onClick={toggleMenu} className=\"text-2xl text-gray-700\">\r\n+            {isOpen ? <FaTimes /> : <FaBars />}\r\n+          </button>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Mobile Dropdown */}\r\n+      {isOpen && (\r\n+        <ul className=\"md:hidden bg-white px-4 pb-4 flex flex-col gap-4 shadow-md\">\r\n+          {navItems.map((item) => (\r\n+            <li key={item.name}>\r\n+              <Link\r\n+                href={item.href}\r\n+                onClick={() => setIsOpen(false)}\r\n+                className=\"flex items-center gap-2 text-gray-700 hover:text-blue-600 transition\"\r\n+              >\r\n+                {item.icon}\r\n+                {item.name}\r\n+              </Link>\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+      )}\r\n+    </nav>\r\n+  )\r\n+}\r\n+\r\n+export default Navbar\r\n"
                },
                {
                    "date": 1750518178110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,73 @@\n+'use client'\r\n+\r\n+import React, { JSX, useState } from 'react'\r\n+import Link from 'next/link'\r\n+import { FaCode, FaProjectDiagram, FaUser, FaEnvelope, FaBars, FaTimes } from 'react-icons/fa'\r\n+\r\n+type NavItem = {\r\n+  name: string\r\n+  href: string\r\n+  icon: JSX.Element\r\n+}\r\n+\r\n+const navItems: NavItem[] = [\r\n+  { name: 'About Me', href: '#about', icon: <FaUser /> },\r\n+  { name: 'Projects', href: '#projects', icon: <FaProjectDiagram /> },\r\n+  { name: 'Skills', href: '#skills', icon: <FaCode /> },\r\n+  { name: 'Contact', href: '#contact', icon: <FaEnvelope /> }\r\n+]\r\n+\r\n+const Navbar = () => {\r\n+  const [isOpen, setIsOpen] = useState(false)\r\n+\r\n+  const toggleMenu = () => setIsOpen(!isOpen)\r\n+\r\n+  return (\r\n+    <nav className=\"bg-white shadow-md fixed top-0 left-0 right-0 z-50\">\r\n+      <div className=\"max-w-6xl mx-auto px-4 flex justify-between items-center h-16\">\r\n+        \r\n+        {/* Logo */}\r\n+        <h1 className=\"text-2xl font-bold text-blue-600\">SmartCoderRahis</h1>\r\n+\r\n+        {/* Desktop Menu */}\r\n+        <ul className=\"hidden md:flex gap-8\">\r\n+          {navItems.map((item) => (\r\n+            <li key={item.name}>\r\n+              <Link href={item.href} className=\"flex items-center gap-2 text-gray-700 hover:text-blue-600 transition\">\r\n+                {item.icon}\r\n+                {item.name}\r\n+              </Link>\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+\r\n+        {/* Mobile Menu Button */}\r\n+        <div className=\"md:hidden\">\r\n+          <button onClick={toggleMenu} className=\"text-2xl text-gray-700\">\r\n+            {isOpen ? <FaTimes /> : <FaBars />}\r\n+          </button>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Mobile Dropdown */}\r\n+      {isOpen && (\r\n+        <ul className=\"md:hidden bg-white px-4 pb-4 flex flex-col gap-4 shadow-md\">\r\n+          {navItems.map((item) => (\r\n+            <li key={item.name}>\r\n+              <Link\r\n+                href={item.href}\r\n+                onClick={() => setIsOpen(false)}\r\n+                className=\"flex items-center gap-2 text-gray-700 hover:text-blue-600 transition\"\r\n+              >\r\n+                {item.icon}\r\n+                {item.name}\r\n+              </Link>\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+      )}\r\n+    </nav>\r\n+  )\r\n+}\r\n+\r\n+export default Navbar\r\n"
                },
                {
                    "date": 1750518183526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,73 @@\n+'use client'\r\n+\r\n+import React, { JSX, useState } from 'react'\r\n+import Link from 'next/link'\r\n+import { FaCode, FaProjectDiagram, FaUser, FaEnvelope, FaBars, FaTimes } from 'react-icons/fa'\r\n+\r\n+type NavItem = {\r\n+  name: string\r\n+  href: string\r\n+  icon: JSX.Element\r\n+}\r\n+\r\n+const navItems: NavItem[] = [\r\n+  { name: 'About Me', href: '#about', icon: <FaUser /> },\r\n+  { name: 'Projects', href: '#projects', icon: <FaProjectDiagram /> },\r\n+  { name: 'Skills', href: '#skills', icon: <FaCode /> },\r\n+  { name: 'Contact', href: '#contact', icon: <FaEnvelope /> }\r\n+]\r\n+\r\n+const Navbar = () => {\r\n+  const [isOpen, setIsOpen] = useState(false)\r\n+\r\n+  const toggleMenu = () => setIsOpen(!isOpen)\r\n+\r\n+  return (\r\n+    <nav className=\"bg-white shadow-md fixed top-0 left-0 right-0 z-50\">\r\n+      <div className=\"max-w-6xl mx-auto px-4 flex justify-between items-center h-16\">\r\n+        \r\n+        {/* Logo */}\r\n+        <h1 className=\"text-2xl font-bold text-blue-600\">SmartCoderRahis</h1>\r\n+\r\n+        {/* Desktop Menu */}\r\n+        <ul className=\"hidden md:flex gap-8\">\r\n+          {navItems.map((item) => (\r\n+            <li key={item.name}>\r\n+              <Link href={item.href} className=\"flex items-center gap-2 text-gray-700 hover:text-blue-600 transition\">\r\n+                {item.icon}\r\n+                {item.name}\r\n+              </Link>\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+\r\n+        {/* Mobile Menu Button */}\r\n+        <div className=\"md:hidden\">\r\n+          <button onClick={toggleMenu} className=\"text-2xl text-gray-700\">\r\n+            {isOpen ? <FaTimes /> : <FaBars />}\r\n+          </button>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Mobile Dropdown */}\r\n+      {isOpen && (\r\n+        <ul className=\"md:hidden bg-white px-4 pb-4 flex flex-col gap-4 shadow-md\">\r\n+          {navItems.map((item) => (\r\n+            <li key={item.name}>\r\n+              <Link\r\n+                href={item.href}\r\n+                onClick={() => setIsOpen(false)}\r\n+                className=\"flex items-center gap-2 text-gray-700 hover:text-blue-600 transition\"\r\n+              >\r\n+                {item.icon}\r\n+                {item.name}\r\n+              </Link>\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+      )}\r\n+    </nav>\r\n+  )\r\n+}\r\n+\r\n+export default Navbar\r\n"
                },
                {
                    "date": 1750518413350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,16 @@\n 'use client'\r\n \r\n-import React, { JSX, useState } from 'react'\r\n+import React, { useState } from 'react'\r\n import Link from 'next/link'\r\n-import { FaCode, FaProjectDiagram, FaUser, FaEnvelope, FaBars, FaTimes } from 'react-icons/fa'\r\n+import { usePathname } from 'next/navigation'\r\n+import {\r\n+  FaCode,\r\n+  FaProjectDiagram,\r\n+  FaUser,\r\n+  FaEnvelope,\r\n+  FaBars\r\n+} from 'react-icons/fa'\r\n \r\n type NavItem = {\r\n   name: string\r\n   href: string\r\n@@ -18,56 +25,89 @@\n ]\r\n \r\n const Navbar = () => {\r\n   const [isOpen, setIsOpen] = useState(false)\r\n+  const [active, setActive] = useState<string>('#about')\r\n \r\n-  const toggleMenu = () => setIsOpen(!isOpen)\r\n+  const toggleMenu = () => setIsOpen((prev) => !prev)\r\n \r\n+  const handleNavClick = (href: string) => {\r\n+    setActive(href)\r\n+    setIsOpen(true)\r\n+    // optional: scroll into view\r\n+    const section = document.querySelector(href)\r\n+    section?.scrollIntoView({ behavior: 'smooth' })\r\n+  }\r\n+\r\n   return (\r\n-    <nav className=\"bg-white shadow-md fixed top-0 left-0 right-0 z-50\">\r\n-      <div className=\"max-w-6xl mx-auto px-4 flex justify-between items-center h-16\">\r\n-        \r\n-        {/* Logo */}\r\n-        <h1 className=\"text-2xl font-bold text-blue-600\">SmartCoderRahis</h1>\r\n+    <>\r\n+      {/* Hamburger */}\r\n+      <div className=\"fixed top-4 left-4 z-[100] md:hidden\">\r\n+        <button\r\n+          onClick={toggleMenu}\r\n+          className=\"text-3xl p-2 bg-white shadow-lg rounded-full text-blue-600 hover:text-blue-800\"\r\n+        >\r\n+          <FaBars />\r\n+        </button>\r\n+      </div>\r\n \r\n-        {/* Desktop Menu */}\r\n-        <ul className=\"hidden md:flex gap-8\">\r\n+      {/* Sidebar */}\r\n+      <aside\r\n+        className={`fixed top-0 left-0 h-full w-[260px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n+          isOpen ? 'translate-x-0' : '-translate-x-full'\r\n+        }`}\r\n+      >\r\n+        <div className=\"p-4 text-2xl font-bold text-blue-600\">\r\n+          SmartCoderRahis\r\n+        </div>\r\n+\r\n+        <ul className=\"flex flex-col gap-4 mt-6 px-4\">\r\n           {navItems.map((item) => (\r\n             <li key={item.name}>\r\n-              <Link href={item.href} className=\"flex items-center gap-2 text-gray-700 hover:text-blue-600 transition\">\r\n-                {item.icon}\r\n+              <button\r\n+                onClick={() => handleNavClick(item.href)}\r\n+                className={`w-full flex items-center gap-3 px-4 py-2 rounded-lg transition \r\n+                  ${\r\n+                    active === item.href\r\n+                      ? 'bg-blue-100 text-blue-600 border-l-4 border-blue-600'\r\n+                      : 'text-gray-700 hover:text-blue-600 hover:bg-blue-50'\r\n+                  }`}\r\n+              >\r\n+                <div\r\n+                  className={`text-xl p-2 rounded-full border transition-all duration-300 ${\r\n+                    active === item.href\r\n+                      ? 'border-blue-600'\r\n+                      : 'border-transparent'\r\n+                  }`}\r\n+                >\r\n+                  {item.icon}\r\n+                </div>\r\n                 {item.name}\r\n-              </Link>\r\n+              </button>\r\n             </li>\r\n           ))}\r\n         </ul>\r\n+      </aside>\r\n \r\n-        {/* Mobile Menu Button */}\r\n-        <div className=\"md:hidden\">\r\n-          <button onClick={toggleMenu} className=\"text-2xl text-gray-700\">\r\n-            {isOpen ? <FaTimes /> : <FaBars />}\r\n-          </button>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Mobile Dropdown */}\r\n-      {isOpen && (\r\n-        <ul className=\"md:hidden bg-white px-4 pb-4 flex flex-col gap-4 shadow-md\">\r\n+      {/* Icon Nav Bar when sidebar is closed */}\r\n+      {!isOpen && (\r\n+        <div className=\"fixed top-1/2 left-2 -translate-y-1/2 z-40 flex flex-col gap-4 bg-white p-2 rounded-r-2xl shadow-md md:hidden\">\r\n           {navItems.map((item) => (\r\n-            <li key={item.name}>\r\n-              <Link\r\n-                href={item.href}\r\n-                onClick={() => setIsOpen(false)}\r\n-                className=\"flex items-center gap-2 text-gray-700 hover:text-blue-600 transition\"\r\n-              >\r\n-                {item.icon}\r\n-                {item.name}\r\n-              </Link>\r\n-            </li>\r\n+            <button\r\n+              key={item.name}\r\n+              onClick={() => handleNavClick(item.href)}\r\n+              className={`p-2 text-2xl rounded-full transition-all duration-300 ${\r\n+                active === item.href\r\n+                  ? 'text-blue-600 border border-blue-600'\r\n+                  : 'text-gray-600 hover:text-blue-600'\r\n+              }`}\r\n+            >\r\n+              {item.icon}\r\n+            </button>\r\n           ))}\r\n-        </ul>\r\n+        </div>\r\n       )}\r\n-    </nav>\r\n+    </>\r\n   )\r\n }\r\n \r\n export default Navbar\r\n"
                },
                {
                    "date": 1750518423608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n 'use client'\r\n \r\n-import React, { useState } from 'react'\r\n+import React, { JSX, useState } from 'react'\r\n import Link from 'next/link'\r\n import { usePathname } from 'next/navigation'\r\n import {\r\n   FaCode,\r\n@@ -110,296 +110,4 @@\n   )\r\n }\r\n \r\n export default Navbar\r\n-'use client'\r\n-\r\n-import React, { JSX, useState } from 'react'\r\n-import Link from 'next/link'\r\n-import { FaCode, FaProjectDiagram, FaUser, FaEnvelope, FaBars, FaTimes } from 'react-icons/fa'\r\n-\r\n-type NavItem = {\r\n-  name: string\r\n-  href: string\r\n-  icon: JSX.Element\r\n-}\r\n-\r\n-const navItems: NavItem[] = [\r\n-  { name: 'About Me', href: '#about', icon: <FaUser /> },\r\n-  { name: 'Projects', href: '#projects', icon: <FaProjectDiagram /> },\r\n-  { name: 'Skills', href: '#skills', icon: <FaCode /> },\r\n-  { name: 'Contact', href: '#contact', icon: <FaEnvelope /> }\r\n-]\r\n-\r\n-const Navbar = () => {\r\n-  const [isOpen, setIsOpen] = useState(false)\r\n-\r\n-  const toggleMenu = () => setIsOpen(!isOpen)\r\n-\r\n-  return (\r\n-    <nav className=\"bg-white shadow-md fixed top-0 left-0 right-0 z-50\">\r\n-      <div className=\"max-w-6xl mx-auto px-4 flex justify-between items-center h-16\">\r\n-        \r\n-        {/* Logo */}\r\n-        <h1 className=\"text-2xl font-bold text-blue-600\">SmartCoderRahis</h1>\r\n-\r\n-        {/* Desktop Menu */}\r\n-        <ul className=\"hidden md:flex gap-8\">\r\n-          {navItems.map((item) => (\r\n-            <li key={item.name}>\r\n-              <Link href={item.href} className=\"flex items-center gap-2 text-gray-700 hover:text-blue-600 transition\">\r\n-                {item.icon}\r\n-                {item.name}\r\n-              </Link>\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-\r\n-        {/* Mobile Menu Button */}\r\n-        <div className=\"md:hidden\">\r\n-          <button onClick={toggleMenu} className=\"text-2xl text-gray-700\">\r\n-            {isOpen ? <FaTimes /> : <FaBars />}\r\n-          </button>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Mobile Dropdown */}\r\n-      {isOpen && (\r\n-        <ul className=\"md:hidden bg-white px-4 pb-4 flex flex-col gap-4 shadow-md\">\r\n-          {navItems.map((item) => (\r\n-            <li key={item.name}>\r\n-              <Link\r\n-                href={item.href}\r\n-                onClick={() => setIsOpen(false)}\r\n-                className=\"flex items-center gap-2 text-gray-700 hover:text-blue-600 transition\"\r\n-              >\r\n-                {item.icon}\r\n-                {item.name}\r\n-              </Link>\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-      )}\r\n-    </nav>\r\n-  )\r\n-}\r\n-\r\n-export default Navbar\r\n-'use client'\r\n-\r\n-import React, { JSX, useState } from 'react'\r\n-import Link from 'next/link'\r\n-import { FaCode, FaProjectDiagram, FaUser, FaEnvelope, FaBars, FaTimes } from 'react-icons/fa'\r\n-\r\n-type NavItem = {\r\n-  name: string\r\n-  href: string\r\n-  icon: JSX.Element\r\n-}\r\n-\r\n-const navItems: NavItem[] = [\r\n-  { name: 'About Me', href: '#about', icon: <FaUser /> },\r\n-  { name: 'Projects', href: '#projects', icon: <FaProjectDiagram /> },\r\n-  { name: 'Skills', href: '#skills', icon: <FaCode /> },\r\n-  { name: 'Contact', href: '#contact', icon: <FaEnvelope /> }\r\n-]\r\n-\r\n-const Navbar = () => {\r\n-  const [isOpen, setIsOpen] = useState(false)\r\n-\r\n-  const toggleMenu = () => setIsOpen(!isOpen)\r\n-\r\n-  return (\r\n-    <nav className=\"bg-white shadow-md fixed top-0 left-0 right-0 z-50\">\r\n-      <div className=\"max-w-6xl mx-auto px-4 flex justify-between items-center h-16\">\r\n-        \r\n-        {/* Logo */}\r\n-        <h1 className=\"text-2xl font-bold text-blue-600\">SmartCoderRahis</h1>\r\n-\r\n-        {/* Desktop Menu */}\r\n-        <ul className=\"hidden md:flex gap-8\">\r\n-          {navItems.map((item) => (\r\n-            <li key={item.name}>\r\n-              <Link href={item.href} className=\"flex items-center gap-2 text-gray-700 hover:text-blue-600 transition\">\r\n-                {item.icon}\r\n-                {item.name}\r\n-              </Link>\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-\r\n-        {/* Mobile Menu Button */}\r\n-        <div className=\"md:hidden\">\r\n-          <button onClick={toggleMenu} className=\"text-2xl text-gray-700\">\r\n-            {isOpen ? <FaTimes /> : <FaBars />}\r\n-          </button>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Mobile Dropdown */}\r\n-      {isOpen && (\r\n-        <ul className=\"md:hidden bg-white px-4 pb-4 flex flex-col gap-4 shadow-md\">\r\n-          {navItems.map((item) => (\r\n-            <li key={item.name}>\r\n-              <Link\r\n-                href={item.href}\r\n-                onClick={() => setIsOpen(false)}\r\n-                className=\"flex items-center gap-2 text-gray-700 hover:text-blue-600 transition\"\r\n-              >\r\n-                {item.icon}\r\n-                {item.name}\r\n-              </Link>\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-      )}\r\n-    </nav>\r\n-  )\r\n-}\r\n-\r\n-export default Navbar\r\n-'use client'\r\n-\r\n-import React, { JSX, useState } from 'react'\r\n-import Link from 'next/link'\r\n-import { FaCode, FaProjectDiagram, FaUser, FaEnvelope, FaBars, FaTimes } from 'react-icons/fa'\r\n-\r\n-type NavItem = {\r\n-  name: string\r\n-  href: string\r\n-  icon: JSX.Element\r\n-}\r\n-\r\n-const navItems: NavItem[] = [\r\n-  { name: 'About Me', href: '#about', icon: <FaUser /> },\r\n-  { name: 'Projects', href: '#projects', icon: <FaProjectDiagram /> },\r\n-  { name: 'Skills', href: '#skills', icon: <FaCode /> },\r\n-  { name: 'Contact', href: '#contact', icon: <FaEnvelope /> }\r\n-]\r\n-\r\n-const Navbar = () => {\r\n-  const [isOpen, setIsOpen] = useState(false)\r\n-\r\n-  const toggleMenu = () => setIsOpen(!isOpen)\r\n-\r\n-  return (\r\n-    <nav className=\"bg-white shadow-md fixed top-0 left-0 right-0 z-50\">\r\n-      <div className=\"max-w-6xl mx-auto px-4 flex justify-between items-center h-16\">\r\n-        \r\n-        {/* Logo */}\r\n-        <h1 className=\"text-2xl font-bold text-blue-600\">SmartCoderRahis</h1>\r\n-\r\n-        {/* Desktop Menu */}\r\n-        <ul className=\"hidden md:flex gap-8\">\r\n-          {navItems.map((item) => (\r\n-            <li key={item.name}>\r\n-              <Link href={item.href} className=\"flex items-center gap-2 text-gray-700 hover:text-blue-600 transition\">\r\n-                {item.icon}\r\n-                {item.name}\r\n-              </Link>\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-\r\n-        {/* Mobile Menu Button */}\r\n-        <div className=\"md:hidden\">\r\n-          <button onClick={toggleMenu} className=\"text-2xl text-gray-700\">\r\n-            {isOpen ? <FaTimes /> : <FaBars />}\r\n-          </button>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Mobile Dropdown */}\r\n-      {isOpen && (\r\n-        <ul className=\"md:hidden bg-white px-4 pb-4 flex flex-col gap-4 shadow-md\">\r\n-          {navItems.map((item) => (\r\n-            <li key={item.name}>\r\n-              <Link\r\n-                href={item.href}\r\n-                onClick={() => setIsOpen(false)}\r\n-                className=\"flex items-center gap-2 text-gray-700 hover:text-blue-600 transition\"\r\n-              >\r\n-                {item.icon}\r\n-                {item.name}\r\n-              </Link>\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-      )}\r\n-    </nav>\r\n-  )\r\n-}\r\n-\r\n-export default Navbar\r\n-'use client'\r\n-\r\n-import React, { useState } from 'react'\r\n-import Link from 'next/link'\r\n-import { FaCode, FaProjectDiagram, FaUser, FaEnvelope, FaBars, FaTimes } from 'react-icons/fa'\r\n-\r\n-type NavItem = {\r\n-  name: string\r\n-  href: string\r\n-  icon: JSX.Element\r\n-}\r\n-\r\n-const navItems: NavItem[] = [\r\n-  { name: 'About Me', href: '#about', icon: <FaUser /> },\r\n-  { name: 'Projects', href: '#projects', icon: <FaProjectDiagram /> },\r\n-  { name: 'Skills', href: '#skills', icon: <FaCode /> },\r\n-  { name: 'Contact', href: '#contact', icon: <FaEnvelope /> }\r\n-]\r\n-\r\n-const Navbar = () => {\r\n-  const [isOpen, setIsOpen] = useState(false)\r\n-\r\n-  const toggleMenu = () => setIsOpen(!isOpen)\r\n-\r\n-  return (\r\n-    <nav className=\"bg-white shadow-md fixed top-0 left-0 right-0 z-50\">\r\n-      <div className=\"max-w-6xl mx-auto px-4 flex justify-between items-center h-16\">\r\n-        \r\n-        {/* Logo */}\r\n-        <h1 className=\"text-2xl font-bold text-blue-600\">SmartCoderRahis</h1>\r\n-\r\n-        {/* Desktop Menu */}\r\n-        <ul className=\"hidden md:flex gap-8\">\r\n-          {navItems.map((item) => (\r\n-            <li key={item.name}>\r\n-              <Link href={item.href} className=\"flex items-center gap-2 text-gray-700 hover:text-blue-600 transition\">\r\n-                {item.icon}\r\n-                {item.name}\r\n-              </Link>\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-\r\n-        {/* Mobile Menu Button */}\r\n-        <div className=\"md:hidden\">\r\n-          <button onClick={toggleMenu} className=\"text-2xl text-gray-700\">\r\n-            {isOpen ? <FaTimes /> : <FaBars />}\r\n-          </button>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Mobile Dropdown */}\r\n-      {isOpen && (\r\n-        <ul className=\"md:hidden bg-white px-4 pb-4 flex flex-col gap-4 shadow-md\">\r\n-          {navItems.map((item) => (\r\n-            <li key={item.name}>\r\n-              <Link\r\n-                href={item.href}\r\n-                onClick={() => setIsOpen(false)}\r\n-                className=\"flex items-center gap-2 text-gray-700 hover:text-blue-600 transition\"\r\n-              >\r\n-                {item.icon}\r\n-                {item.name}\r\n-              </Link>\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-      )}\r\n-    </nav>\r\n-  )\r\n-}\r\n-\r\n-export default Navbar\r\n"
                },
                {
                    "date": 1750518429289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,113 @@\n+'use client'\r\n+\r\n+import React, { JSX, useState } from 'react'\r\n+import Link from 'next/link'\r\n+import { usePathname } from 'next/navigation'\r\n+import {\r\n+  FaCode,\r\n+  FaProjectDiagram,\r\n+  FaUser,\r\n+  FaEnvelope,\r\n+  FaBars\r\n+} from 'react-icons/fa'\r\n+\r\n+type NavItem = {\r\n+  name: string\r\n+  href: string\r\n+  icon: JSX.Element\r\n+}\r\n+\r\n+const navItems: NavItem[] = [\r\n+  { name: 'About Me', href: '#about', icon: <FaUser /> },\r\n+  { name: 'Projects', href: '#projects', icon: <FaProjectDiagram /> },\r\n+  { name: 'Skills', href: '#skills', icon: <FaCode /> },\r\n+  { name: 'Contact', href: '#contact', icon: <FaEnvelope /> }\r\n+]\r\n+\r\n+const Navbar = () => {\r\n+  const [isOpen, setIsOpen] = useState(false)\r\n+  const [active, setActive] = useState<string>('#about')\r\n+\r\n+  const toggleMenu = () => setIsOpen((prev) => !prev)\r\n+\r\n+  const handleNavClick = (href: string) => {\r\n+    setActive(href)\r\n+    setIsOpen(true)\r\n+    // optional: scroll into view\r\n+    const section = document.querySelector(href)\r\n+    section?.scrollIntoView({ behavior: 'smooth' })\r\n+  }\r\n+\r\n+  return (\r\n+    <>\r\n+      {/* Hamburger */}\r\n+      <div className=\"fixed top-4 left-4 z-[100] md:hidden\">\r\n+        <button\r\n+          onClick={toggleMenu}\r\n+          className=\"text-3xl p-2 bg-white shadow-lg rounded-full text-blue-600 hover:text-blue-800\"\r\n+        >\r\n+          <FaBars />\r\n+        </button>\r\n+      </div>\r\n+\r\n+      {/* Sidebar */}\r\n+      <aside\r\n+        className={`fixed top-0 left-0 h-full w-[260px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n+          isOpen ? 'translate-x-0' : '-translate-x-full'\r\n+        }`}\r\n+      >\r\n+        <div className=\"p-4 text-2xl font-bold text-blue-600\">\r\n+          SmartCoderRahis\r\n+        </div>\r\n+\r\n+        <ul className=\"flex flex-col gap-4 mt-6 px-4\">\r\n+          {navItems.map((item) => (\r\n+            <li key={item.name}>\r\n+              <button\r\n+                onClick={() => handleNavClick(item.href)}\r\n+                className={`w-full flex items-center gap-3 px-4 py-2 rounded-lg transition \r\n+                  ${\r\n+                    active === item.href\r\n+                      ? 'bg-blue-100 text-blue-600 border-l-4 border-blue-600'\r\n+                      : 'text-gray-700 hover:text-blue-600 hover:bg-blue-50'\r\n+                  }`}\r\n+              >\r\n+                <div\r\n+                  className={`text-xl p-2 rounded-full border transition-all duration-300 ${\r\n+                    active === item.href\r\n+                      ? 'border-blue-600'\r\n+                      : 'border-transparent'\r\n+                  }`}\r\n+                >\r\n+                  {item.icon}\r\n+                </div>\r\n+                {item.name}\r\n+              </button>\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+      </aside>\r\n+\r\n+      {/* Icon Nav Bar when sidebar is closed */}\r\n+      {!isOpen && (\r\n+        <div className=\"fixed top-1/2 left-2 -translate-y-1/2 z-40 flex flex-col gap-4 bg-white p-2 rounded-r-2xl shadow-md md:hidden\">\r\n+          {navItems.map((item) => (\r\n+            <button\r\n+              key={item.name}\r\n+              onClick={() => handleNavClick(item.href)}\r\n+              className={`p-2 text-2xl rounded-full transition-all duration-300 ${\r\n+                active === item.href\r\n+                  ? 'text-blue-600 border border-blue-600'\r\n+                  : 'text-gray-600 hover:text-blue-600'\r\n+              }`}\r\n+            >\r\n+              {item.icon}\r\n+            </button>\r\n+          ))}\r\n+        </div>\r\n+      )}\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Navbar\r\n"
                },
                {
                    "date": 1750518445334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,113 @@\n+'use client'\r\n+\r\n+import React, { JSX, useState } from 'react'\r\n+import Link from 'next/link'\r\n+import { usePathname } from 'next/navigation'\r\n+import {\r\n+  FaCode,\r\n+  FaProjectDiagram,\r\n+  FaUser,\r\n+  FaEnvelope,\r\n+  FaBars\r\n+} from 'react-icons/fa'\r\n+\r\n+type NavItem = {\r\n+  name: string\r\n+  href: string\r\n+  icon: JSX.Element\r\n+}\r\n+\r\n+const navItems: NavItem[] = [\r\n+  { name: 'About Me', href: '#about', icon: <FaUser /> },\r\n+  { name: 'Projects', href: '#projects', icon: <FaProjectDiagram /> },\r\n+  { name: 'Skills', href: '#skills', icon: <FaCode /> },\r\n+  { name: 'Contact', href: '#contact', icon: <FaEnvelope /> }\r\n+]\r\n+\r\n+const Navbar = () => {\r\n+  const [isOpen, setIsOpen] = useState(false)\r\n+  const [active, setActive] = useState<string>('#about')\r\n+\r\n+  const toggleMenu = () => setIsOpen((prev) => !prev)\r\n+\r\n+  const handleNavClick = (href: string) => {\r\n+    setActive(href)\r\n+    setIsOpen(true)\r\n+    // optional: scroll into view\r\n+    const section = document.querySelector(href)\r\n+    section?.scrollIntoView({ behavior: 'smooth' })\r\n+  }\r\n+\r\n+  return (\r\n+    <>\r\n+      {/* Hamburger */}\r\n+      <div className=\"fixed top-4 left-4 z-[100] md:hidden\">\r\n+        <button\r\n+          onClick={toggleMenu}\r\n+          className=\"text-3xl p-2 bg-white shadow-lg rounded-full text-blue-600 hover:text-blue-800\"\r\n+        >\r\n+          <FaBars />\r\n+        </button>\r\n+      </div>\r\n+\r\n+      {/* Sidebar */}\r\n+      <aside\r\n+        className={`fixed top-0 left-0 h-full w-[260px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n+          isOpen ? 'translate-x-0' : '-translate-x-full'\r\n+        }`}\r\n+      >\r\n+        <div className=\"p-4 text-2xl font-bold text-blue-600\">\r\n+          SmartCoderRahis\r\n+        </div>\r\n+\r\n+        <ul className=\"flex flex-col gap-4 mt-6 px-4\">\r\n+          {navItems.map((item) => (\r\n+            <li key={item.name}>\r\n+              <button\r\n+                onClick={() => handleNavClick(item.href)}\r\n+                className={`w-full flex items-center gap-3 px-4 py-2 rounded-lg transition \r\n+                  ${\r\n+                    active === item.href\r\n+                      ? 'bg-blue-100 text-blue-600 border-l-4 border-blue-600'\r\n+                      : 'text-gray-700 hover:text-blue-600 hover:bg-blue-50'\r\n+                  }`}\r\n+              >\r\n+                <div\r\n+                  className={`text-xl p-2 rounded-full border transition-all duration-300 ${\r\n+                    active === item.href\r\n+                      ? 'border-blue-600'\r\n+                      : 'border-transparent'\r\n+                  }`}\r\n+                >\r\n+                  {item.icon}\r\n+                </div>\r\n+                {item.name}\r\n+              </button>\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+      </aside>\r\n+\r\n+      {/* Icon Nav Bar when sidebar is closed */}\r\n+      {!isOpen && (\r\n+        <div className=\"fixed top-1/2 left-2 -translate-y-1/2 z-40 flex flex-col gap-4 bg-white p-2 rounded-r-2xl shadow-md md:hidden\">\r\n+          {navItems.map((item) => (\r\n+            <button\r\n+              key={item.name}\r\n+              onClick={() => handleNavClick(item.href)}\r\n+              className={`p-2 text-2xl rounded-full transition-all duration-300 ${\r\n+                active === item.href\r\n+                  ? 'text-blue-600 border border-blue-600'\r\n+                  : 'text-gray-600 hover:text-blue-600'\r\n+              }`}\r\n+            >\r\n+              {item.icon}\r\n+            </button>\r\n+          ))}\r\n+        </div>\r\n+      )}\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Navbar\r\n"
                },
                {
                    "date": 1750518458455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,113 @@\n+'use client'\r\n+\r\n+import React, { JSX, useState } from 'react'\r\n+import Link from 'next/link'\r\n+import { usePathname } from 'next/navigation'\r\n+import {\r\n+  FaCode,\r\n+  FaProjectDiagram,\r\n+  FaUser,\r\n+  FaEnvelope,\r\n+  FaBars\r\n+} from 'react-icons/fa'\r\n+\r\n+type NavItem = {\r\n+  name: string\r\n+  href: string\r\n+  icon: JSX.Element\r\n+}\r\n+\r\n+const navItems: NavItem[] = [\r\n+  { name: 'About Me', href: '#about', icon: <FaUser /> },\r\n+  { name: 'Projects', href: '#projects', icon: <FaProjectDiagram /> },\r\n+  { name: 'Skills', href: '#skills', icon: <FaCode /> },\r\n+  { name: 'Contact', href: '#contact', icon: <FaEnvelope /> }\r\n+]\r\n+\r\n+const Navbar = () => {\r\n+  const [isOpen, setIsOpen] = useState(false)\r\n+  const [active, setActive] = useState<string>('#about')\r\n+\r\n+  const toggleMenu = () => setIsOpen((prev) => !prev)\r\n+\r\n+  const handleNavClick = (href: string) => {\r\n+    setActive(href)\r\n+    setIsOpen(true)\r\n+    // optional: scroll into view\r\n+    const section = document.querySelector(href)\r\n+    section?.scrollIntoView({ behavior: 'smooth' })\r\n+  }\r\n+\r\n+  return (\r\n+    <>\r\n+      {/* Hamburger */}\r\n+      <div className=\"fixed top-4 left-4 z-[100] md:hidden\">\r\n+        <button\r\n+          onClick={toggleMenu}\r\n+          className=\"text-3xl p-2 bg-white shadow-lg rounded-full text-blue-600 hover:text-blue-800\"\r\n+        >\r\n+          <FaBars />\r\n+        </button>\r\n+      </div>\r\n+\r\n+      {/* Sidebar */}\r\n+      <aside\r\n+        className={`fixed top-0 left-0 h-full w-[260px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n+          isOpen ? 'translate-x-0' : '-translate-x-full'\r\n+        }`}\r\n+      >\r\n+        <div className=\"p-4 text-2xl font-bold text-blue-600\">\r\n+          SmartCoderRahis\r\n+        </div>\r\n+\r\n+        <ul className=\"flex flex-col gap-4 mt-6 px-4\">\r\n+          {navItems.map((item) => (\r\n+            <li key={item.name}>\r\n+              <button\r\n+                onClick={() => handleNavClick(item.href)}\r\n+                className={`w-full flex items-center gap-3 px-4 py-2 rounded-lg transition \r\n+                  ${\r\n+                    active === item.href\r\n+                      ? 'bg-blue-100 text-blue-600 border-l-4 border-blue-600'\r\n+                      : 'text-gray-700 hover:text-blue-600 hover:bg-blue-50'\r\n+                  }`}\r\n+              >\r\n+                <div\r\n+                  className={`text-xl p-2 rounded-full border transition-all duration-300 ${\r\n+                    active === item.href\r\n+                      ? 'border-blue-600'\r\n+                      : 'border-transparent'\r\n+                  }`}\r\n+                >\r\n+                  {item.icon}\r\n+                </div>\r\n+                {item.name}\r\n+              </button>\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+      </aside>\r\n+\r\n+      {/* Icon Nav Bar when sidebar is closed */}\r\n+      {!isOpen && (\r\n+        <div className=\"fixed top-1/2 left-2 -translate-y-1/2 z-40 flex flex-col gap-4 bg-white p-2 rounded-r-2xl shadow-md md:hidden\">\r\n+          {navItems.map((item) => (\r\n+            <button\r\n+              key={item.name}\r\n+              onClick={() => handleNavClick(item.href)}\r\n+              className={`p-2 text-2xl rounded-full transition-all duration-300 ${\r\n+                active === item.href\r\n+                  ? 'text-blue-600 border border-blue-600'\r\n+                  : 'text-gray-600 hover:text-blue-600'\r\n+              }`}\r\n+            >\r\n+              {item.icon}\r\n+            </button>\r\n+          ))}\r\n+        </div>\r\n+      )}\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Navbar\r\n"
                },
                {
                    "date": 1750518640427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,113 @@\n+'use client'\r\n+\r\n+import React, { JSX, useState } from 'react'\r\n+import Link from 'next/link'\r\n+import { usePathname } from 'next/navigation'\r\n+import {\r\n+  FaCode,\r\n+  FaProjectDiagram,\r\n+  FaUser,\r\n+  FaEnvelope,\r\n+  FaBars\r\n+} from 'react-icons/fa'\r\n+\r\n+type NavItem = {\r\n+  name: string\r\n+  href: string\r\n+  icon: JSX.Element\r\n+}\r\n+\r\n+const navItems: NavItem[] = [\r\n+  { name: 'About Me', href: '#about', icon: <FaUser /> },\r\n+  { name: 'Projects', href: '#projects', icon: <FaProjectDiagram /> },\r\n+  { name: 'Skills', href: '#skills', icon: <FaCode /> },\r\n+  { name: 'Contact', href: '#contact', icon: <FaEnvelope /> }\r\n+]\r\n+\r\n+const Navbar = () => {\r\n+  const [isOpen, setIsOpen] = useState(false)\r\n+  const [active, setActive] = useState<string>('#about')\r\n+\r\n+  const toggleMenu = () => setIsOpen((prev) => !prev)\r\n+\r\n+  const handleNavClick = (href: string) => {\r\n+    setActive(href)\r\n+    setIsOpen(true)\r\n+    // optional: scroll into view\r\n+    const section = document.querySelector(href)\r\n+    section?.scrollIntoView({ behavior: 'smooth' })\r\n+  }\r\n+\r\n+  return (\r\n+    <>\r\n+      {/* Hamburger */}\r\n+      <div className=\"fixed top-4 left-4 z-[100] md:hidden\">\r\n+        <button\r\n+          onClick={toggleMenu}\r\n+          className=\"text-3xl p-2 bg-white shadow-lg rounded-full text-blue-600 hover:text-blue-800\"\r\n+        >\r\n+          <FaBars />\r\n+        </button>\r\n+      </div>\r\n+\r\n+      {/* Sidebar */}\r\n+      <aside\r\n+        className={`fixed top-0 left-0 h-full w-[260px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n+          isOpen ? 'translate-x-0' : '-translate-x-full'\r\n+        }`}\r\n+      >\r\n+        <div className=\"p-4 text-2xl font-bold text-blue-600\">\r\n+          SmartCoderRahis\r\n+        </div>\r\n+\r\n+        <ul className=\"flex flex-col gap-4 mt-6 px-4\">\r\n+          {navItems.map((item) => (\r\n+            <li key={item.name}>\r\n+              <button\r\n+                onClick={() => handleNavClick(item.href)}\r\n+                className={`w-full flex items-center gap-3 px-4 py-2 rounded-lg transition \r\n+                  ${\r\n+                    active === item.href\r\n+                      ? 'bg-blue-100 text-blue-600 border-l-4 border-blue-600'\r\n+                      : 'text-gray-700 hover:text-blue-600 hover:bg-blue-50'\r\n+                  }`}\r\n+              >\r\n+                <div\r\n+                  className={`text-xl p-2 rounded-full border transition-all duration-300 ${\r\n+                    active === item.href\r\n+                      ? 'border-blue-600'\r\n+                      : 'border-transparent'\r\n+                  }`}\r\n+                >\r\n+                  {item.icon}\r\n+                </div>\r\n+                {item.name}\r\n+              </button>\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+      </aside>\r\n+\r\n+      {/* Icon Nav Bar when sidebar is closed */}\r\n+      {!isOpen && (\r\n+        <div className=\"fixed top-1/2 left-2 -translate-y-1/2 z-40 flex flex-col gap-4 bg-white p-2 rounded-r-2xl shadow-md md:hidden\">\r\n+          {navItems.map((item) => (\r\n+            <button\r\n+              key={item.name}\r\n+              onClick={() => handleNavClick(item.href)}\r\n+              className={`p-2 text-2xl rounded-full transition-all duration-300 ${\r\n+                active === item.href\r\n+                  ? 'text-blue-600 border border-blue-600'\r\n+                  : 'text-gray-600 hover:text-blue-600'\r\n+              }`}\r\n+            >\r\n+              {item.icon}\r\n+            </button>\r\n+          ))}\r\n+        </div>\r\n+      )}\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Navbar\r\n"
                },
                {
                    "date": 1750518876806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,176 @@\n+'use client'\r\n+\r\n+import React, { useState, useRef, useEffect } from 'react'\r\n+import Link from 'next/link'\r\n+import {\r\n+  FaCode,\r\n+  FaProjectDiagram,\r\n+  FaUser,\r\n+  FaEnvelope,\r\n+  FaBars\r\n+} from 'react-icons/fa'\r\n+\r\n+type NavItem = {\r\n+  name: string\r\n+  href: string\r\n+  icon: JSX.Element\r\n+}\r\n+\r\n+const navItems: NavItem[] = [\r\n+  { name: 'About Me', href: '#about', icon: <FaUser /> },\r\n+  { name: 'Projects', href: '#projects', icon: <FaProjectDiagram /> },\r\n+  { name: 'Skills', href: '#skills', icon: <FaCode /> },\r\n+  { name: 'Contact', href: '#contact', icon: <FaEnvelope /> }\r\n+]\r\n+\r\n+const Navbar = () => {\r\n+  const [isOpen, setIsOpen] = useState(false)\r\n+  const [active, setActive] = useState<string>('#about')\r\n+  const [dragPos, setDragPos] = useState({ x: 20, y: 100 })\r\n+  const dragRef = useRef<HTMLDivElement>(null)\r\n+\r\n+  // Slide gesture support\r\n+  useEffect(() => {\r\n+    let startX = 0\r\n+    const handleTouchStart = (e: TouchEvent) => {\r\n+      startX = e.touches[0].clientX\r\n+    }\r\n+\r\n+    const handleTouchEnd = (e: TouchEvent) => {\r\n+      const endX = e.changedTouches[0].clientX\r\n+      const diffX = startX - endX\r\n+\r\n+      if (!isOpen && diffX > 50) setIsOpen(true) // Slide in\r\n+      if (isOpen && diffX < -50) setIsOpen(false) // Slide out\r\n+    }\r\n+\r\n+    window.addEventListener('touchstart', handleTouchStart)\r\n+    window.addEventListener('touchend', handleTouchEnd)\r\n+    return () => {\r\n+      window.removeEventListener('touchstart', handleTouchStart)\r\n+      window.removeEventListener('touchend', handleTouchEnd)\r\n+    }\r\n+  }, [isOpen])\r\n+\r\n+  // Draggable hamburger\r\n+  useEffect(() => {\r\n+    const el = dragRef.current\r\n+    let offsetX = 0, offsetY = 0\r\n+\r\n+    const handleMouseDown = (e: MouseEvent) => {\r\n+      offsetX = e.clientX - dragPos.x\r\n+      offsetY = e.clientY - dragPos.y\r\n+      document.addEventListener('mousemove', handleMouseMove)\r\n+      document.addEventListener('mouseup', handleMouseUp)\r\n+    }\r\n+\r\n+    const handleMouseMove = (e: MouseEvent) => {\r\n+      setDragPos({ x: e.clientX - offsetX, y: e.clientY - offsetY })\r\n+    }\r\n+\r\n+    const handleMouseUp = () => {\r\n+      document.removeEventListener('mousemove', handleMouseMove)\r\n+      document.removeEventListener('mouseup', handleMouseUp)\r\n+    }\r\n+\r\n+    el?.addEventListener('mousedown', handleMouseDown)\r\n+    return () => el?.removeEventListener('mousedown', handleMouseDown)\r\n+  }, [dragPos])\r\n+\r\n+  const handleNavClick = (href: string) => {\r\n+    setActive(href)\r\n+    setIsOpen(true)\r\n+    const section = document.querySelector(href)\r\n+    section?.scrollIntoView({ behavior: 'smooth' })\r\n+  }\r\n+\r\n+  return (\r\n+    <>\r\n+      {/* Draggable Hamburger */}\r\n+      <div\r\n+        ref={dragRef}\r\n+        className=\"fixed z-[100] p-2 text-2xl text-blue-600 bg-white shadow-lg rounded-full cursor-move\"\r\n+        style={{ top: dragPos.y, left: isOpen ? 'calc(100% - 260px + 1rem)' : dragPos.x }}\r\n+        onClick={() => setIsOpen(!isOpen)}\r\n+      >\r\n+        <FaBars />\r\n+      </div>\r\n+\r\n+      {/* Sidebar (Right to Left) */}\r\n+      <aside\r\n+        className={`fixed top-0 right-0 h-full w-[260px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n+          isOpen ? 'translate-x-0' : 'translate-x-full'\r\n+        }`}\r\n+      >\r\n+        <div className=\"p-4 text-2xl font-bold text-blue-600\">\r\n+          SmartCoderRahis\r\n+        </div>\r\n+\r\n+        <ul className=\"flex flex-col gap-4 mt-6 px-4\">\r\n+          {navItems.map((item) => (\r\n+            <li key={item.name}>\r\n+              <button\r\n+                onClick={() => handleNavClick(item.href)}\r\n+                className={`w-full flex items-center gap-3 px-4 py-2 rounded-lg transition-all duration-500 transform ${\r\n+                  active === item.href\r\n+                    ? 'bg-blue-100 text-blue-600 border-r-4 border-blue-600 animate-slidein'\r\n+                    : 'text-gray-700 hover:text-blue-600 hover:bg-blue-50'\r\n+                }`}\r\n+              >\r\n+                <div\r\n+                  className={`text-xl p-2 rounded-full border transition-all duration-300 ${\r\n+                    active === item.href ? 'border-blue-600' : 'border-transparent'\r\n+                  }`}\r\n+                >\r\n+                  {item.icon}\r\n+                </div>\r\n+                {item.name}\r\n+              </button>\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+      </aside>\r\n+\r\n+      {/* Popup Icon Nav (Movable) */}\r\n+      {!isOpen && (\r\n+        <div\r\n+          className=\"fixed z-40 flex flex-col gap-4 bg-white p-2 rounded-xl shadow-md\"\r\n+          style={{ top: dragPos.y + 80, left: dragPos.x }}\r\n+        >\r\n+          {navItems.map((item) => (\r\n+            <button\r\n+              key={item.name}\r\n+              onClick={() => handleNavClick(item.href)}\r\n+              className={`p-2 text-2xl rounded-full transition-all duration-300 ${\r\n+                active === item.href\r\n+                  ? 'text-blue-600 border border-blue-600 animate-bounce'\r\n+                  : 'text-gray-600 hover:text-blue-600'\r\n+              }`}\r\n+            >\r\n+              {item.icon}\r\n+            </button>\r\n+          ))}\r\n+        </div>\r\n+      )}\r\n+\r\n+      {/* Slide in animation */}\r\n+      <style jsx>{`\r\n+        @keyframes slidein {\r\n+          from {\r\n+            transform: translateY(-10px);\r\n+            opacity: 0;\r\n+          }\r\n+          to {\r\n+            transform: translateY(0);\r\n+            opacity: 1;\r\n+          }\r\n+          .animate-slidein {\r\n+            animation: slidein 0.4s ease-out;\r\n+          }\r\n+        }\r\n+      `}</style>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Navbar\r\n"
                },
                {
                    "date": 1750519186783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,10 @@\n   FaCode,\r\n   FaProjectDiagram,\r\n   FaUser,\r\n   FaEnvelope,\r\n-  FaBars\r\n+  FaBars,\r\n+  FaTimes\r\n } from 'react-icons/fa'\r\n \r\n type NavItem = {\r\n   name: string\r\n@@ -26,56 +27,54 @@\n const Navbar = () => {\r\n   const [isOpen, setIsOpen] = useState(false)\r\n   const [active, setActive] = useState<string>('#about')\r\n   const [dragPos, setDragPos] = useState({ x: 20, y: 100 })\r\n+  const [popupVisible, setPopupVisible] = useState(true)\r\n+  const popupRef = useRef<HTMLDivElement>(null)\r\n   const dragRef = useRef<HTMLDivElement>(null)\r\n \r\n   // Slide gesture support\r\n   useEffect(() => {\r\n     let startX = 0\r\n     const handleTouchStart = (e: TouchEvent) => {\r\n       startX = e.touches[0].clientX\r\n     }\r\n-\r\n     const handleTouchEnd = (e: TouchEvent) => {\r\n       const endX = e.changedTouches[0].clientX\r\n       const diffX = startX - endX\r\n-\r\n-      if (!isOpen && diffX > 50) setIsOpen(true) // Slide in\r\n-      if (isOpen && diffX < -50) setIsOpen(false) // Slide out\r\n+      if (!isOpen && diffX > 50) setIsOpen(true)\r\n+      if (isOpen && diffX < -50) setIsOpen(false)\r\n     }\r\n-\r\n     window.addEventListener('touchstart', handleTouchStart)\r\n     window.addEventListener('touchend', handleTouchEnd)\r\n     return () => {\r\n       window.removeEventListener('touchstart', handleTouchStart)\r\n       window.removeEventListener('touchend', handleTouchEnd)\r\n     }\r\n   }, [isOpen])\r\n \r\n-  // Draggable hamburger\r\n+  // Draggable floating icon menu (mobile style)\r\n   useEffect(() => {\r\n-    const el = dragRef.current\r\n+    const el = popupRef.current\r\n     let offsetX = 0, offsetY = 0\r\n-\r\n-    const handleMouseDown = (e: MouseEvent) => {\r\n-      offsetX = e.clientX - dragPos.x\r\n-      offsetY = e.clientY - dragPos.y\r\n-      document.addEventListener('mousemove', handleMouseMove)\r\n-      document.addEventListener('mouseup', handleMouseUp)\r\n+    const handleTouchStart = (e: TouchEvent) => {\r\n+      offsetX = e.touches[0].clientX - dragPos.x\r\n+      offsetY = e.touches[0].clientY - dragPos.y\r\n+      const handleTouchMove = (e: TouchEvent) => {\r\n+        setDragPos({\r\n+          x: e.touches[0].clientX - offsetX,\r\n+          y: e.touches[0].clientY - offsetY\r\n+        })\r\n+      }\r\n+      const handleTouchEnd = () => {\r\n+        window.removeEventListener('touchmove', handleTouchMove)\r\n+        window.removeEventListener('touchend', handleTouchEnd)\r\n+      }\r\n+      window.addEventListener('touchmove', handleTouchMove)\r\n+      window.addEventListener('touchend', handleTouchEnd)\r\n     }\r\n-\r\n-    const handleMouseMove = (e: MouseEvent) => {\r\n-      setDragPos({ x: e.clientX - offsetX, y: e.clientY - offsetY })\r\n-    }\r\n-\r\n-    const handleMouseUp = () => {\r\n-      document.removeEventListener('mousemove', handleMouseMove)\r\n-      document.removeEventListener('mouseup', handleMouseUp)\r\n-    }\r\n-\r\n-    el?.addEventListener('mousedown', handleMouseDown)\r\n-    return () => el?.removeEventListener('mousedown', handleMouseDown)\r\n+    el?.addEventListener('touchstart', handleTouchStart)\r\n+    return () => el?.removeEventListener('touchstart', handleTouchStart)\r\n   }, [dragPos])\r\n \r\n   const handleNavClick = (href: string) => {\r\n     setActive(href)\r\n@@ -85,28 +84,31 @@\n   }\r\n \r\n   return (\r\n     <>\r\n-      {/* Draggable Hamburger */}\r\n+      {/* Hamburger */}\r\n       <div\r\n         ref={dragRef}\r\n-        className=\"fixed z-[100] p-2 text-2xl text-blue-600 bg-white shadow-lg rounded-full cursor-move\"\r\n-        style={{ top: dragPos.y, left: isOpen ? 'calc(100% - 260px + 1rem)' : dragPos.x }}\r\n+        className=\"fixed z-[100] p-2 text-2xl text-blue-600 bg-white shadow-lg rounded-full cursor-pointer transition-all\"\r\n+        style={{\r\n+          top: '1rem',\r\n+          right: isOpen ? '260px' : '1rem',\r\n+          transition: 'right 0.3s ease-in-out'\r\n+        }}\r\n         onClick={() => setIsOpen(!isOpen)}\r\n       >\r\n         <FaBars />\r\n       </div>\r\n \r\n-      {/* Sidebar (Right to Left) */}\r\n+      {/* Sidebar */}\r\n       <aside\r\n         className={`fixed top-0 right-0 h-full w-[260px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n           isOpen ? 'translate-x-0' : 'translate-x-full'\r\n         }`}\r\n       >\r\n         <div className=\"p-4 text-2xl font-bold text-blue-600\">\r\n           SmartCoderRahis\r\n         </div>\r\n-\r\n         <ul className=\"flex flex-col gap-4 mt-6 px-4\">\r\n           {navItems.map((item) => (\r\n             <li key={item.name}>\r\n               <button\r\n@@ -130,14 +132,21 @@\n           ))}\r\n         </ul>\r\n       </aside>\r\n \r\n-      {/* Popup Icon Nav (Movable) */}\r\n-      {!isOpen && (\r\n+      {/* Floating popup icons nav */}\r\n+      {!isOpen && popupVisible && (\r\n         <div\r\n+          ref={popupRef}\r\n           className=\"fixed z-40 flex flex-col gap-4 bg-white p-2 rounded-xl shadow-md\"\r\n           style={{ top: dragPos.y + 80, left: dragPos.x }}\r\n         >\r\n+          <button\r\n+            onClick={() => setPopupVisible(false)}\r\n+            className=\"self-end text-red-600 text-xl\"\r\n+          >\r\n+            <FaTimes />\r\n+          </button>\r\n           {navItems.map((item) => (\r\n             <button\r\n               key={item.name}\r\n               onClick={() => handleNavClick(item.href)}\r\n@@ -173,569 +182,4 @@\n   )\r\n }\r\n \r\n export default Navbar\r\n-'use client'\r\n-\r\n-import React, { JSX, useState } from 'react'\r\n-import Link from 'next/link'\r\n-import { usePathname } from 'next/navigation'\r\n-import {\r\n-  FaCode,\r\n-  FaProjectDiagram,\r\n-  FaUser,\r\n-  FaEnvelope,\r\n-  FaBars\r\n-} from 'react-icons/fa'\r\n-\r\n-type NavItem = {\r\n-  name: string\r\n-  href: string\r\n-  icon: JSX.Element\r\n-}\r\n-\r\n-const navItems: NavItem[] = [\r\n-  { name: 'About Me', href: '#about', icon: <FaUser /> },\r\n-  { name: 'Projects', href: '#projects', icon: <FaProjectDiagram /> },\r\n-  { name: 'Skills', href: '#skills', icon: <FaCode /> },\r\n-  { name: 'Contact', href: '#contact', icon: <FaEnvelope /> }\r\n-]\r\n-\r\n-const Navbar = () => {\r\n-  const [isOpen, setIsOpen] = useState(false)\r\n-  const [active, setActive] = useState<string>('#about')\r\n-\r\n-  const toggleMenu = () => setIsOpen((prev) => !prev)\r\n-\r\n-  const handleNavClick = (href: string) => {\r\n-    setActive(href)\r\n-    setIsOpen(true)\r\n-    // optional: scroll into view\r\n-    const section = document.querySelector(href)\r\n-    section?.scrollIntoView({ behavior: 'smooth' })\r\n-  }\r\n-\r\n-  return (\r\n-    <>\r\n-      {/* Hamburger */}\r\n-      <div className=\"fixed top-4 left-4 z-[100] md:hidden\">\r\n-        <button\r\n-          onClick={toggleMenu}\r\n-          className=\"text-3xl p-2 bg-white shadow-lg rounded-full text-blue-600 hover:text-blue-800\"\r\n-        >\r\n-          <FaBars />\r\n-        </button>\r\n-      </div>\r\n-\r\n-      {/* Sidebar */}\r\n-      <aside\r\n-        className={`fixed top-0 left-0 h-full w-[260px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n-          isOpen ? 'translate-x-0' : '-translate-x-full'\r\n-        }`}\r\n-      >\r\n-        <div className=\"p-4 text-2xl font-bold text-blue-600\">\r\n-          SmartCoderRahis\r\n-        </div>\r\n-\r\n-        <ul className=\"flex flex-col gap-4 mt-6 px-4\">\r\n-          {navItems.map((item) => (\r\n-            <li key={item.name}>\r\n-              <button\r\n-                onClick={() => handleNavClick(item.href)}\r\n-                className={`w-full flex items-center gap-3 px-4 py-2 rounded-lg transition \r\n-                  ${\r\n-                    active === item.href\r\n-                      ? 'bg-blue-100 text-blue-600 border-l-4 border-blue-600'\r\n-                      : 'text-gray-700 hover:text-blue-600 hover:bg-blue-50'\r\n-                  }`}\r\n-              >\r\n-                <div\r\n-                  className={`text-xl p-2 rounded-full border transition-all duration-300 ${\r\n-                    active === item.href\r\n-                      ? 'border-blue-600'\r\n-                      : 'border-transparent'\r\n-                  }`}\r\n-                >\r\n-                  {item.icon}\r\n-                </div>\r\n-                {item.name}\r\n-              </button>\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-      </aside>\r\n-\r\n-      {/* Icon Nav Bar when sidebar is closed */}\r\n-      {!isOpen && (\r\n-        <div className=\"fixed top-1/2 left-2 -translate-y-1/2 z-40 flex flex-col gap-4 bg-white p-2 rounded-r-2xl shadow-md md:hidden\">\r\n-          {navItems.map((item) => (\r\n-            <button\r\n-              key={item.name}\r\n-              onClick={() => handleNavClick(item.href)}\r\n-              className={`p-2 text-2xl rounded-full transition-all duration-300 ${\r\n-                active === item.href\r\n-                  ? 'text-blue-600 border border-blue-600'\r\n-                  : 'text-gray-600 hover:text-blue-600'\r\n-              }`}\r\n-            >\r\n-              {item.icon}\r\n-            </button>\r\n-          ))}\r\n-        </div>\r\n-      )}\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Navbar\r\n-'use client'\r\n-\r\n-import React, { JSX, useState } from 'react'\r\n-import Link from 'next/link'\r\n-import { usePathname } from 'next/navigation'\r\n-import {\r\n-  FaCode,\r\n-  FaProjectDiagram,\r\n-  FaUser,\r\n-  FaEnvelope,\r\n-  FaBars\r\n-} from 'react-icons/fa'\r\n-\r\n-type NavItem = {\r\n-  name: string\r\n-  href: string\r\n-  icon: JSX.Element\r\n-}\r\n-\r\n-const navItems: NavItem[] = [\r\n-  { name: 'About Me', href: '#about', icon: <FaUser /> },\r\n-  { name: 'Projects', href: '#projects', icon: <FaProjectDiagram /> },\r\n-  { name: 'Skills', href: '#skills', icon: <FaCode /> },\r\n-  { name: 'Contact', href: '#contact', icon: <FaEnvelope /> }\r\n-]\r\n-\r\n-const Navbar = () => {\r\n-  const [isOpen, setIsOpen] = useState(false)\r\n-  const [active, setActive] = useState<string>('#about')\r\n-\r\n-  const toggleMenu = () => setIsOpen((prev) => !prev)\r\n-\r\n-  const handleNavClick = (href: string) => {\r\n-    setActive(href)\r\n-    setIsOpen(true)\r\n-    // optional: scroll into view\r\n-    const section = document.querySelector(href)\r\n-    section?.scrollIntoView({ behavior: 'smooth' })\r\n-  }\r\n-\r\n-  return (\r\n-    <>\r\n-      {/* Hamburger */}\r\n-      <div className=\"fixed top-4 left-4 z-[100] md:hidden\">\r\n-        <button\r\n-          onClick={toggleMenu}\r\n-          className=\"text-3xl p-2 bg-white shadow-lg rounded-full text-blue-600 hover:text-blue-800\"\r\n-        >\r\n-          <FaBars />\r\n-        </button>\r\n-      </div>\r\n-\r\n-      {/* Sidebar */}\r\n-      <aside\r\n-        className={`fixed top-0 left-0 h-full w-[260px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n-          isOpen ? 'translate-x-0' : '-translate-x-full'\r\n-        }`}\r\n-      >\r\n-        <div className=\"p-4 text-2xl font-bold text-blue-600\">\r\n-          SmartCoderRahis\r\n-        </div>\r\n-\r\n-        <ul className=\"flex flex-col gap-4 mt-6 px-4\">\r\n-          {navItems.map((item) => (\r\n-            <li key={item.name}>\r\n-              <button\r\n-                onClick={() => handleNavClick(item.href)}\r\n-                className={`w-full flex items-center gap-3 px-4 py-2 rounded-lg transition \r\n-                  ${\r\n-                    active === item.href\r\n-                      ? 'bg-blue-100 text-blue-600 border-l-4 border-blue-600'\r\n-                      : 'text-gray-700 hover:text-blue-600 hover:bg-blue-50'\r\n-                  }`}\r\n-              >\r\n-                <div\r\n-                  className={`text-xl p-2 rounded-full border transition-all duration-300 ${\r\n-                    active === item.href\r\n-                      ? 'border-blue-600'\r\n-                      : 'border-transparent'\r\n-                  }`}\r\n-                >\r\n-                  {item.icon}\r\n-                </div>\r\n-                {item.name}\r\n-              </button>\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-      </aside>\r\n-\r\n-      {/* Icon Nav Bar when sidebar is closed */}\r\n-      {!isOpen && (\r\n-        <div className=\"fixed top-1/2 left-2 -translate-y-1/2 z-40 flex flex-col gap-4 bg-white p-2 rounded-r-2xl shadow-md md:hidden\">\r\n-          {navItems.map((item) => (\r\n-            <button\r\n-              key={item.name}\r\n-              onClick={() => handleNavClick(item.href)}\r\n-              className={`p-2 text-2xl rounded-full transition-all duration-300 ${\r\n-                active === item.href\r\n-                  ? 'text-blue-600 border border-blue-600'\r\n-                  : 'text-gray-600 hover:text-blue-600'\r\n-              }`}\r\n-            >\r\n-              {item.icon}\r\n-            </button>\r\n-          ))}\r\n-        </div>\r\n-      )}\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Navbar\r\n-'use client'\r\n-\r\n-import React, { JSX, useState } from 'react'\r\n-import Link from 'next/link'\r\n-import { usePathname } from 'next/navigation'\r\n-import {\r\n-  FaCode,\r\n-  FaProjectDiagram,\r\n-  FaUser,\r\n-  FaEnvelope,\r\n-  FaBars\r\n-} from 'react-icons/fa'\r\n-\r\n-type NavItem = {\r\n-  name: string\r\n-  href: string\r\n-  icon: JSX.Element\r\n-}\r\n-\r\n-const navItems: NavItem[] = [\r\n-  { name: 'About Me', href: '#about', icon: <FaUser /> },\r\n-  { name: 'Projects', href: '#projects', icon: <FaProjectDiagram /> },\r\n-  { name: 'Skills', href: '#skills', icon: <FaCode /> },\r\n-  { name: 'Contact', href: '#contact', icon: <FaEnvelope /> }\r\n-]\r\n-\r\n-const Navbar = () => {\r\n-  const [isOpen, setIsOpen] = useState(false)\r\n-  const [active, setActive] = useState<string>('#about')\r\n-\r\n-  const toggleMenu = () => setIsOpen((prev) => !prev)\r\n-\r\n-  const handleNavClick = (href: string) => {\r\n-    setActive(href)\r\n-    setIsOpen(true)\r\n-    // optional: scroll into view\r\n-    const section = document.querySelector(href)\r\n-    section?.scrollIntoView({ behavior: 'smooth' })\r\n-  }\r\n-\r\n-  return (\r\n-    <>\r\n-      {/* Hamburger */}\r\n-      <div className=\"fixed top-4 left-4 z-[100] md:hidden\">\r\n-        <button\r\n-          onClick={toggleMenu}\r\n-          className=\"text-3xl p-2 bg-white shadow-lg rounded-full text-blue-600 hover:text-blue-800\"\r\n-        >\r\n-          <FaBars />\r\n-        </button>\r\n-      </div>\r\n-\r\n-      {/* Sidebar */}\r\n-      <aside\r\n-        className={`fixed top-0 left-0 h-full w-[260px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n-          isOpen ? 'translate-x-0' : '-translate-x-full'\r\n-        }`}\r\n-      >\r\n-        <div className=\"p-4 text-2xl font-bold text-blue-600\">\r\n-          SmartCoderRahis\r\n-        </div>\r\n-\r\n-        <ul className=\"flex flex-col gap-4 mt-6 px-4\">\r\n-          {navItems.map((item) => (\r\n-            <li key={item.name}>\r\n-              <button\r\n-                onClick={() => handleNavClick(item.href)}\r\n-                className={`w-full flex items-center gap-3 px-4 py-2 rounded-lg transition \r\n-                  ${\r\n-                    active === item.href\r\n-                      ? 'bg-blue-100 text-blue-600 border-l-4 border-blue-600'\r\n-                      : 'text-gray-700 hover:text-blue-600 hover:bg-blue-50'\r\n-                  }`}\r\n-              >\r\n-                <div\r\n-                  className={`text-xl p-2 rounded-full border transition-all duration-300 ${\r\n-                    active === item.href\r\n-                      ? 'border-blue-600'\r\n-                      : 'border-transparent'\r\n-                  }`}\r\n-                >\r\n-                  {item.icon}\r\n-                </div>\r\n-                {item.name}\r\n-              </button>\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-      </aside>\r\n-\r\n-      {/* Icon Nav Bar when sidebar is closed */}\r\n-      {!isOpen && (\r\n-        <div className=\"fixed top-1/2 left-2 -translate-y-1/2 z-40 flex flex-col gap-4 bg-white p-2 rounded-r-2xl shadow-md md:hidden\">\r\n-          {navItems.map((item) => (\r\n-            <button\r\n-              key={item.name}\r\n-              onClick={() => handleNavClick(item.href)}\r\n-              className={`p-2 text-2xl rounded-full transition-all duration-300 ${\r\n-                active === item.href\r\n-                  ? 'text-blue-600 border border-blue-600'\r\n-                  : 'text-gray-600 hover:text-blue-600'\r\n-              }`}\r\n-            >\r\n-              {item.icon}\r\n-            </button>\r\n-          ))}\r\n-        </div>\r\n-      )}\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Navbar\r\n-'use client'\r\n-\r\n-import React, { JSX, useState } from 'react'\r\n-import Link from 'next/link'\r\n-import { usePathname } from 'next/navigation'\r\n-import {\r\n-  FaCode,\r\n-  FaProjectDiagram,\r\n-  FaUser,\r\n-  FaEnvelope,\r\n-  FaBars\r\n-} from 'react-icons/fa'\r\n-\r\n-type NavItem = {\r\n-  name: string\r\n-  href: string\r\n-  icon: JSX.Element\r\n-}\r\n-\r\n-const navItems: NavItem[] = [\r\n-  { name: 'About Me', href: '#about', icon: <FaUser /> },\r\n-  { name: 'Projects', href: '#projects', icon: <FaProjectDiagram /> },\r\n-  { name: 'Skills', href: '#skills', icon: <FaCode /> },\r\n-  { name: 'Contact', href: '#contact', icon: <FaEnvelope /> }\r\n-]\r\n-\r\n-const Navbar = () => {\r\n-  const [isOpen, setIsOpen] = useState(false)\r\n-  const [active, setActive] = useState<string>('#about')\r\n-\r\n-  const toggleMenu = () => setIsOpen((prev) => !prev)\r\n-\r\n-  const handleNavClick = (href: string) => {\r\n-    setActive(href)\r\n-    setIsOpen(true)\r\n-    // optional: scroll into view\r\n-    const section = document.querySelector(href)\r\n-    section?.scrollIntoView({ behavior: 'smooth' })\r\n-  }\r\n-\r\n-  return (\r\n-    <>\r\n-      {/* Hamburger */}\r\n-      <div className=\"fixed top-4 left-4 z-[100] md:hidden\">\r\n-        <button\r\n-          onClick={toggleMenu}\r\n-          className=\"text-3xl p-2 bg-white shadow-lg rounded-full text-blue-600 hover:text-blue-800\"\r\n-        >\r\n-          <FaBars />\r\n-        </button>\r\n-      </div>\r\n-\r\n-      {/* Sidebar */}\r\n-      <aside\r\n-        className={`fixed top-0 left-0 h-full w-[260px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n-          isOpen ? 'translate-x-0' : '-translate-x-full'\r\n-        }`}\r\n-      >\r\n-        <div className=\"p-4 text-2xl font-bold text-blue-600\">\r\n-          SmartCoderRahis\r\n-        </div>\r\n-\r\n-        <ul className=\"flex flex-col gap-4 mt-6 px-4\">\r\n-          {navItems.map((item) => (\r\n-            <li key={item.name}>\r\n-              <button\r\n-                onClick={() => handleNavClick(item.href)}\r\n-                className={`w-full flex items-center gap-3 px-4 py-2 rounded-lg transition \r\n-                  ${\r\n-                    active === item.href\r\n-                      ? 'bg-blue-100 text-blue-600 border-l-4 border-blue-600'\r\n-                      : 'text-gray-700 hover:text-blue-600 hover:bg-blue-50'\r\n-                  }`}\r\n-              >\r\n-                <div\r\n-                  className={`text-xl p-2 rounded-full border transition-all duration-300 ${\r\n-                    active === item.href\r\n-                      ? 'border-blue-600'\r\n-                      : 'border-transparent'\r\n-                  }`}\r\n-                >\r\n-                  {item.icon}\r\n-                </div>\r\n-                {item.name}\r\n-              </button>\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-      </aside>\r\n-\r\n-      {/* Icon Nav Bar when sidebar is closed */}\r\n-      {!isOpen && (\r\n-        <div className=\"fixed top-1/2 left-2 -translate-y-1/2 z-40 flex flex-col gap-4 bg-white p-2 rounded-r-2xl shadow-md md:hidden\">\r\n-          {navItems.map((item) => (\r\n-            <button\r\n-              key={item.name}\r\n-              onClick={() => handleNavClick(item.href)}\r\n-              className={`p-2 text-2xl rounded-full transition-all duration-300 ${\r\n-                active === item.href\r\n-                  ? 'text-blue-600 border border-blue-600'\r\n-                  : 'text-gray-600 hover:text-blue-600'\r\n-              }`}\r\n-            >\r\n-              {item.icon}\r\n-            </button>\r\n-          ))}\r\n-        </div>\r\n-      )}\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Navbar\r\n-'use client'\r\n-\r\n-import React, { JSX, useState } from 'react'\r\n-import Link from 'next/link'\r\n-import { usePathname } from 'next/navigation'\r\n-import {\r\n-  FaCode,\r\n-  FaProjectDiagram,\r\n-  FaUser,\r\n-  FaEnvelope,\r\n-  FaBars\r\n-} from 'react-icons/fa'\r\n-\r\n-type NavItem = {\r\n-  name: string\r\n-  href: string\r\n-  icon: JSX.Element\r\n-}\r\n-\r\n-const navItems: NavItem[] = [\r\n-  { name: 'About Me', href: '#about', icon: <FaUser /> },\r\n-  { name: 'Projects', href: '#projects', icon: <FaProjectDiagram /> },\r\n-  { name: 'Skills', href: '#skills', icon: <FaCode /> },\r\n-  { name: 'Contact', href: '#contact', icon: <FaEnvelope /> }\r\n-]\r\n-\r\n-const Navbar = () => {\r\n-  const [isOpen, setIsOpen] = useState(false)\r\n-  const [active, setActive] = useState<string>('#about')\r\n-\r\n-  const toggleMenu = () => setIsOpen((prev) => !prev)\r\n-\r\n-  const handleNavClick = (href: string) => {\r\n-    setActive(href)\r\n-    setIsOpen(true)\r\n-    // optional: scroll into view\r\n-    const section = document.querySelector(href)\r\n-    section?.scrollIntoView({ behavior: 'smooth' })\r\n-  }\r\n-\r\n-  return (\r\n-    <>\r\n-      {/* Hamburger */}\r\n-      <div className=\"fixed top-4 left-4 z-[100] md:hidden\">\r\n-        <button\r\n-          onClick={toggleMenu}\r\n-          className=\"text-3xl p-2 bg-white shadow-lg rounded-full text-blue-600 hover:text-blue-800\"\r\n-        >\r\n-          <FaBars />\r\n-        </button>\r\n-      </div>\r\n-\r\n-      {/* Sidebar */}\r\n-      <aside\r\n-        className={`fixed top-0 left-0 h-full w-[260px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n-          isOpen ? 'translate-x-0' : '-translate-x-full'\r\n-        }`}\r\n-      >\r\n-        <div className=\"p-4 text-2xl font-bold text-blue-600\">\r\n-          SmartCoderRahis\r\n-        </div>\r\n-\r\n-        <ul className=\"flex flex-col gap-4 mt-6 px-4\">\r\n-          {navItems.map((item) => (\r\n-            <li key={item.name}>\r\n-              <button\r\n-                onClick={() => handleNavClick(item.href)}\r\n-                className={`w-full flex items-center gap-3 px-4 py-2 rounded-lg transition \r\n-                  ${\r\n-                    active === item.href\r\n-                      ? 'bg-blue-100 text-blue-600 border-l-4 border-blue-600'\r\n-                      : 'text-gray-700 hover:text-blue-600 hover:bg-blue-50'\r\n-                  }`}\r\n-              >\r\n-                <div\r\n-                  className={`text-xl p-2 rounded-full border transition-all duration-300 ${\r\n-                    active === item.href\r\n-                      ? 'border-blue-600'\r\n-                      : 'border-transparent'\r\n-                  }`}\r\n-                >\r\n-                  {item.icon}\r\n-                </div>\r\n-                {item.name}\r\n-              </button>\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-      </aside>\r\n-\r\n-      {/* Icon Nav Bar when sidebar is closed */}\r\n-      {!isOpen && (\r\n-        <div className=\"fixed top-1/2 left-2 -translate-y-1/2 z-40 flex flex-col gap-4 bg-white p-2 rounded-r-2xl shadow-md md:hidden\">\r\n-          {navItems.map((item) => (\r\n-            <button\r\n-              key={item.name}\r\n-              onClick={() => handleNavClick(item.href)}\r\n-              className={`p-2 text-2xl rounded-full transition-all duration-300 ${\r\n-                active === item.href\r\n-                  ? 'text-blue-600 border border-blue-600'\r\n-                  : 'text-gray-600 hover:text-blue-600'\r\n-              }`}\r\n-            >\r\n-              {item.icon}\r\n-            </button>\r\n-          ))}\r\n-        </div>\r\n-      )}\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Navbar\r\n"
                },
                {
                    "date": 1750519199300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n 'use client'\r\n \r\n-import React, { useState, useRef, useEffect } from 'react'\r\n+import React, { useState, useRef, useEffect, JSX } from 'react'\r\n import Link from 'next/link'\r\n import {\r\n   FaCode,\r\n   FaProjectDiagram,\r\n"
                },
                {
                    "date": 1750519244320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,185 @@\n+'use client'\r\n+\r\n+import React, { useState, useRef, useEffect, JSX } from 'react'\r\n+import Link from 'next/link'\r\n+import {\r\n+  FaCode,\r\n+  FaProjectDiagram,\r\n+  FaUser,\r\n+  FaEnvelope,\r\n+  FaBars,\r\n+  FaTimes\r\n+} from 'react-icons/fa'\r\n+\r\n+type NavItem = {\r\n+  name: string\r\n+  href: string\r\n+  icon: JSX.Element\r\n+}\r\n+\r\n+const navItems: NavItem[] = [\r\n+  { name: 'About Me', href: '#about', icon: <FaUser /> },\r\n+  { name: 'Projects', href: '#projects', icon: <FaProjectDiagram /> },\r\n+  { name: 'Skills', href: '#skills', icon: <FaCode /> },\r\n+  { name: 'Contact', href: '#contact', icon: <FaEnvelope /> }\r\n+]\r\n+\r\n+const Navbar = () => {\r\n+  const [isOpen, setIsOpen] = useState(false)\r\n+  const [active, setActive] = useState<string>('#about')\r\n+  const [dragPos, setDragPos] = useState({ x: 20, y: 100 })\r\n+  const [popupVisible, setPopupVisible] = useState(true)\r\n+  const popupRef = useRef<HTMLDivElement>(null)\r\n+  const dragRef = useRef<HTMLDivElement>(null)\r\n+\r\n+  // Slide gesture support\r\n+  useEffect(() => {\r\n+    let startX = 0\r\n+    const handleTouchStart = (e: TouchEvent) => {\r\n+      startX = e.touches[0].clientX\r\n+    }\r\n+    const handleTouchEnd = (e: TouchEvent) => {\r\n+      const endX = e.changedTouches[0].clientX\r\n+      const diffX = startX - endX\r\n+      if (!isOpen && diffX > 50) setIsOpen(true)\r\n+      if (isOpen && diffX < -50) setIsOpen(false)\r\n+    }\r\n+    window.addEventListener('touchstart', handleTouchStart)\r\n+    window.addEventListener('touchend', handleTouchEnd)\r\n+    return () => {\r\n+      window.removeEventListener('touchstart', handleTouchStart)\r\n+      window.removeEventListener('touchend', handleTouchEnd)\r\n+    }\r\n+  }, [isOpen])\r\n+\r\n+  // Draggable floating icon menu (mobile style)\r\n+  useEffect(() => {\r\n+    const el = popupRef.current\r\n+    let offsetX = 0, offsetY = 0\r\n+    const handleTouchStart = (e: TouchEvent) => {\r\n+      offsetX = e.touches[0].clientX - dragPos.x\r\n+      offsetY = e.touches[0].clientY - dragPos.y\r\n+      const handleTouchMove = (e: TouchEvent) => {\r\n+        setDragPos({\r\n+          x: e.touches[0].clientX - offsetX,\r\n+          y: e.touches[0].clientY - offsetY\r\n+        })\r\n+      }\r\n+      const handleTouchEnd = () => {\r\n+        window.removeEventListener('touchmove', handleTouchMove)\r\n+        window.removeEventListener('touchend', handleTouchEnd)\r\n+      }\r\n+      window.addEventListener('touchmove', handleTouchMove)\r\n+      window.addEventListener('touchend', handleTouchEnd)\r\n+    }\r\n+    el?.addEventListener('touchstart', handleTouchStart)\r\n+    return () => el?.removeEventListener('touchstart', handleTouchStart)\r\n+  }, [dragPos])\r\n+\r\n+  const handleNavClick = (href: string) => {\r\n+    setActive(href)\r\n+    setIsOpen(true)\r\n+    const section = document.querySelector(href)\r\n+    section?.scrollIntoView({ behavior: 'smooth' })\r\n+  }\r\n+\r\n+  return (\r\n+    <>\r\n+      {/* Hamburger */}\r\n+      <div\r\n+        ref={dragRef}\r\n+        className=\"fixed z-[100] p-2 text-2xl text-blue-600 bg-white shadow-lg rounded-full cursor-pointer transition-all\"\r\n+        style={{\r\n+          top: '1rem',\r\n+          right: isOpen ? '260px' : '1rem',\r\n+          transition: 'right 0.3s ease-in-out'\r\n+        }}\r\n+        onClick={() => setIsOpen(!isOpen)}\r\n+      >\r\n+        <FaBars />\r\n+      </div>\r\n+\r\n+      {/* Sidebar */}\r\n+      <aside\r\n+        className={`fixed top-0 right-0 h-full w-[260px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n+          isOpen ? 'translate-x-0' : 'translate-x-full'\r\n+        }`}\r\n+      >\r\n+        <div className=\"p-4 text-2xl font-bold text-blue-600\">\r\n+          SmartCoderRahis\r\n+        </div>\r\n+        <ul className=\"flex flex-col gap-4 mt-6 px-4\">\r\n+          {navItems.map((item) => (\r\n+            <li key={item.name}>\r\n+              <button\r\n+                onClick={() => handleNavClick(item.href)}\r\n+                className={`w-full flex items-center gap-3 px-4 py-2 rounded-lg transition-all duration-500 transform ${\r\n+                  active === item.href\r\n+                    ? 'bg-blue-100 text-blue-600 border-r-4 border-blue-600 animate-slidein'\r\n+                    : 'text-gray-700 hover:text-blue-600 hover:bg-blue-50'\r\n+                }`}\r\n+              >\r\n+                <div\r\n+                  className={`text-xl p-2 rounded-full border transition-all duration-300 ${\r\n+                    active === item.href ? 'border-blue-600' : 'border-transparent'\r\n+                  }`}\r\n+                >\r\n+                  {item.icon}\r\n+                </div>\r\n+                {item.name}\r\n+              </button>\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+      </aside>\r\n+\r\n+      {/* Floating popup icons nav */}\r\n+      {!isOpen && popupVisible && (\r\n+        <div\r\n+          ref={popupRef}\r\n+          className=\"fixed z-40 flex flex-col gap-4 bg-white p-2 rounded-xl shadow-md\"\r\n+          style={{ top: dragPos.y + 80, left: dragPos.x }}\r\n+        >\r\n+          <button\r\n+            onClick={() => setPopupVisible(false)}\r\n+            className=\"self-end text-red-600 text-xl\"\r\n+          >\r\n+            <FaTimes />\r\n+          </button>\r\n+          {navItems.map((item) => (\r\n+            <button\r\n+              key={item.name}\r\n+              onClick={() => handleNavClick(item.href)}\r\n+              className={`p-2 text-2xl rounded-full transition-all duration-300 ${\r\n+                active === item.href\r\n+                  ? 'text-blue-600 border border-blue-600 animate-bounce'\r\n+                  : 'text-gray-600 hover:text-blue-600'\r\n+              }`}\r\n+            >\r\n+              {item.icon}\r\n+            </button>\r\n+          ))}\r\n+        </div>\r\n+      )}\r\n+\r\n+      {/* Slide in animation */}\r\n+      <style jsx>{`\r\n+        @keyframes slidein {\r\n+          from {\r\n+            transform: translateY(-10px);\r\n+            opacity: 0;\r\n+          }\r\n+          to {\r\n+            transform: translateY(0);\r\n+            opacity: 1;\r\n+          }\r\n+          .animate-slidein {\r\n+            animation: slidein 0.4s ease-out;\r\n+          }\r\n+        }\r\n+      `}</style>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Navbar\r\n"
                },
                {
                    "date": 1750519284183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,185 @@\n+'use client'\r\n+\r\n+import React, { useState, useRef, useEffect, JSX } from 'react'\r\n+import Link from 'next/link'\r\n+import {\r\n+  FaCode,\r\n+  FaProjectDiagram,\r\n+  FaUser,\r\n+  FaEnvelope,\r\n+  FaBars,\r\n+  FaTimes\r\n+} from 'react-icons/fa'\r\n+\r\n+type NavItem = {\r\n+  name: string\r\n+  href: string\r\n+  icon: JSX.Element\r\n+}\r\n+\r\n+const navItems: NavItem[] = [\r\n+  { name: 'About Me', href: '#about', icon: <FaUser /> },\r\n+  { name: 'Projects', href: '#projects', icon: <FaProjectDiagram /> },\r\n+  { name: 'Skills', href: '#skills', icon: <FaCode /> },\r\n+  { name: 'Contact', href: '#contact', icon: <FaEnvelope /> }\r\n+]\r\n+\r\n+const Navbar = () => {\r\n+  const [isOpen, setIsOpen] = useState(false)\r\n+  const [active, setActive] = useState<string>('#about')\r\n+  const [dragPos, setDragPos] = useState({ x: 20, y: 100 })\r\n+  const [popupVisible, setPopupVisible] = useState(true)\r\n+  const popupRef = useRef<HTMLDivElement>(null)\r\n+  const dragRef = useRef<HTMLDivElement>(null)\r\n+\r\n+  // Slide gesture support\r\n+  useEffect(() => {\r\n+    let startX = 0\r\n+    const handleTouchStart = (e: TouchEvent) => {\r\n+      startX = e.touches[0].clientX\r\n+    }\r\n+    const handleTouchEnd = (e: TouchEvent) => {\r\n+      const endX = e.changedTouches[0].clientX\r\n+      const diffX = startX - endX\r\n+      if (!isOpen && diffX > 50) setIsOpen(true)\r\n+      if (isOpen && diffX < -50) setIsOpen(false)\r\n+    }\r\n+    window.addEventListener('touchstart', handleTouchStart)\r\n+    window.addEventListener('touchend', handleTouchEnd)\r\n+    return () => {\r\n+      window.removeEventListener('touchstart', handleTouchStart)\r\n+      window.removeEventListener('touchend', handleTouchEnd)\r\n+    }\r\n+  }, [isOpen])\r\n+\r\n+  // Draggable floating icon menu (mobile style)\r\n+  useEffect(() => {\r\n+    const el = popupRef.current\r\n+    let offsetX = 0, offsetY = 0\r\n+    const handleTouchStart = (e: TouchEvent) => {\r\n+      offsetX = e.touches[0].clientX - dragPos.x\r\n+      offsetY = e.touches[0].clientY - dragPos.y\r\n+      const handleTouchMove = (e: TouchEvent) => {\r\n+        setDragPos({\r\n+          x: e.touches[0].clientX - offsetX,\r\n+          y: e.touches[0].clientY - offsetY\r\n+        })\r\n+      }\r\n+      const handleTouchEnd = () => {\r\n+        window.removeEventListener('touchmove', handleTouchMove)\r\n+        window.removeEventListener('touchend', handleTouchEnd)\r\n+      }\r\n+      window.addEventListener('touchmove', handleTouchMove)\r\n+      window.addEventListener('touchend', handleTouchEnd)\r\n+    }\r\n+    el?.addEventListener('touchstart', handleTouchStart)\r\n+    return () => el?.removeEventListener('touchstart', handleTouchStart)\r\n+  }, [dragPos])\r\n+\r\n+  const handleNavClick = (href: string) => {\r\n+    setActive(href)\r\n+    setIsOpen(true)\r\n+    const section = document.querySelector(href)\r\n+    section?.scrollIntoView({ behavior: 'smooth' })\r\n+  }\r\n+\r\n+  return (\r\n+    <>\r\n+      {/* Hamburger */}\r\n+      <div\r\n+        ref={dragRef}\r\n+        className=\"fixed z-[100] p-2 text-2xl text-blue-600 bg-white shadow-lg rounded-full cursor-pointer transition-all\"\r\n+        style={{\r\n+          top: '1rem',\r\n+          right: isOpen ? '260px' : '2rem',\r\n+          transition: 'right 0.3s ease-in-out'\r\n+        }}\r\n+        onClick={() => setIsOpen(!isOpen)}\r\n+      >\r\n+        <FaBars />\r\n+      </div>\r\n+\r\n+      {/* Sidebar */}\r\n+      <aside\r\n+        className={`fixed top-0 right-0 h-full w-[260px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n+          isOpen ? 'translate-x-0' : 'translate-x-full'\r\n+        }`}\r\n+      >\r\n+        <div className=\"p-4 text-2xl font-bold text-blue-600\">\r\n+          SmartCoderRahis\r\n+        </div>\r\n+        <ul className=\"flex flex-col gap-4 mt-6 px-4\">\r\n+          {navItems.map((item) => (\r\n+            <li key={item.name}>\r\n+              <button\r\n+                onClick={() => handleNavClick(item.href)}\r\n+                className={`w-full flex items-center gap-3 px-4 py-2 rounded-lg transition-all duration-500 transform ${\r\n+                  active === item.href\r\n+                    ? 'bg-blue-100 text-blue-600 border-r-4 border-blue-600 animate-slidein'\r\n+                    : 'text-gray-700 hover:text-blue-600 hover:bg-blue-50'\r\n+                }`}\r\n+              >\r\n+                <div\r\n+                  className={`text-xl p-2 rounded-full border transition-all duration-300 ${\r\n+                    active === item.href ? 'border-blue-600' : 'border-transparent'\r\n+                  }`}\r\n+                >\r\n+                  {item.icon}\r\n+                </div>\r\n+                {item.name}\r\n+              </button>\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+      </aside>\r\n+\r\n+      {/* Floating popup icons nav */}\r\n+      {!isOpen && popupVisible && (\r\n+        <div\r\n+          ref={popupRef}\r\n+          className=\"fixed z-40 flex flex-col gap-4 bg-white p-2 rounded-xl shadow-md\"\r\n+          style={{ top: dragPos.y + 80, left: dragPos.x }}\r\n+        >\r\n+          <button\r\n+            onClick={() => setPopupVisible(false)}\r\n+            className=\"self-end text-red-600 text-xl\"\r\n+          >\r\n+            <FaTimes />\r\n+          </button>\r\n+          {navItems.map((item) => (\r\n+            <button\r\n+              key={item.name}\r\n+              onClick={() => handleNavClick(item.href)}\r\n+              className={`p-2 text-2xl rounded-full transition-all duration-300 ${\r\n+                active === item.href\r\n+                  ? 'text-blue-600 border border-blue-600 animate-bounce'\r\n+                  : 'text-gray-600 hover:text-blue-600'\r\n+              }`}\r\n+            >\r\n+              {item.icon}\r\n+            </button>\r\n+          ))}\r\n+        </div>\r\n+      )}\r\n+\r\n+      {/* Slide in animation */}\r\n+      <style jsx>{`\r\n+        @keyframes slidein {\r\n+          from {\r\n+            transform: translateY(-10px);\r\n+            opacity: 0;\r\n+          }\r\n+          to {\r\n+            transform: translateY(0);\r\n+            opacity: 1;\r\n+          }\r\n+          .animate-slidein {\r\n+            animation: slidein 0.4s ease-out;\r\n+          }\r\n+        }\r\n+      `}</style>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Navbar\r\n"
                },
                {
                    "date": 1750519296347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,193 +90,8 @@\n         ref={dragRef}\r\n         className=\"fixed z-[100] p-2 text-2xl text-blue-600 bg-white shadow-lg rounded-full cursor-pointer transition-all\"\r\n         style={{\r\n           top: '1rem',\r\n-          right: isOpen ? '260px' : '2rem',\r\n-          transition: 'right 0.3s ease-in-out'\r\n-        }}\r\n-        onClick={() => setIsOpen(!isOpen)}\r\n-      >\r\n-        <FaBars />\r\n-      </div>\r\n-\r\n-      {/* Sidebar */}\r\n-      <aside\r\n-        className={`fixed top-0 right-0 h-full w-[260px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n-          isOpen ? 'translate-x-0' : 'translate-x-full'\r\n-        }`}\r\n-      >\r\n-        <div className=\"p-4 text-2xl font-bold text-blue-600\">\r\n-          SmartCoderRahis\r\n-        </div>\r\n-        <ul className=\"flex flex-col gap-4 mt-6 px-4\">\r\n-          {navItems.map((item) => (\r\n-            <li key={item.name}>\r\n-              <button\r\n-                onClick={() => handleNavClick(item.href)}\r\n-                className={`w-full flex items-center gap-3 px-4 py-2 rounded-lg transition-all duration-500 transform ${\r\n-                  active === item.href\r\n-                    ? 'bg-blue-100 text-blue-600 border-r-4 border-blue-600 animate-slidein'\r\n-                    : 'text-gray-700 hover:text-blue-600 hover:bg-blue-50'\r\n-                }`}\r\n-              >\r\n-                <div\r\n-                  className={`text-xl p-2 rounded-full border transition-all duration-300 ${\r\n-                    active === item.href ? 'border-blue-600' : 'border-transparent'\r\n-                  }`}\r\n-                >\r\n-                  {item.icon}\r\n-                </div>\r\n-                {item.name}\r\n-              </button>\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-      </aside>\r\n-\r\n-      {/* Floating popup icons nav */}\r\n-      {!isOpen && popupVisible && (\r\n-        <div\r\n-          ref={popupRef}\r\n-          className=\"fixed z-40 flex flex-col gap-4 bg-white p-2 rounded-xl shadow-md\"\r\n-          style={{ top: dragPos.y + 80, left: dragPos.x }}\r\n-        >\r\n-          <button\r\n-            onClick={() => setPopupVisible(false)}\r\n-            className=\"self-end text-red-600 text-xl\"\r\n-          >\r\n-            <FaTimes />\r\n-          </button>\r\n-          {navItems.map((item) => (\r\n-            <button\r\n-              key={item.name}\r\n-              onClick={() => handleNavClick(item.href)}\r\n-              className={`p-2 text-2xl rounded-full transition-all duration-300 ${\r\n-                active === item.href\r\n-                  ? 'text-blue-600 border border-blue-600 animate-bounce'\r\n-                  : 'text-gray-600 hover:text-blue-600'\r\n-              }`}\r\n-            >\r\n-              {item.icon}\r\n-            </button>\r\n-          ))}\r\n-        </div>\r\n-      )}\r\n-\r\n-      {/* Slide in animation */}\r\n-      <style jsx>{`\r\n-        @keyframes slidein {\r\n-          from {\r\n-            transform: translateY(-10px);\r\n-            opacity: 0;\r\n-          }\r\n-          to {\r\n-            transform: translateY(0);\r\n-            opacity: 1;\r\n-          }\r\n-          .animate-slidein {\r\n-            animation: slidein 0.4s ease-out;\r\n-          }\r\n-        }\r\n-      `}</style>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Navbar\r\n-'use client'\r\n-\r\n-import React, { useState, useRef, useEffect, JSX } from 'react'\r\n-import Link from 'next/link'\r\n-import {\r\n-  FaCode,\r\n-  FaProjectDiagram,\r\n-  FaUser,\r\n-  FaEnvelope,\r\n-  FaBars,\r\n-  FaTimes\r\n-} from 'react-icons/fa'\r\n-\r\n-type NavItem = {\r\n-  name: string\r\n-  href: string\r\n-  icon: JSX.Element\r\n-}\r\n-\r\n-const navItems: NavItem[] = [\r\n-  { name: 'About Me', href: '#about', icon: <FaUser /> },\r\n-  { name: 'Projects', href: '#projects', icon: <FaProjectDiagram /> },\r\n-  { name: 'Skills', href: '#skills', icon: <FaCode /> },\r\n-  { name: 'Contact', href: '#contact', icon: <FaEnvelope /> }\r\n-]\r\n-\r\n-const Navbar = () => {\r\n-  const [isOpen, setIsOpen] = useState(false)\r\n-  const [active, setActive] = useState<string>('#about')\r\n-  const [dragPos, setDragPos] = useState({ x: 20, y: 100 })\r\n-  const [popupVisible, setPopupVisible] = useState(true)\r\n-  const popupRef = useRef<HTMLDivElement>(null)\r\n-  const dragRef = useRef<HTMLDivElement>(null)\r\n-\r\n-  // Slide gesture support\r\n-  useEffect(() => {\r\n-    let startX = 0\r\n-    const handleTouchStart = (e: TouchEvent) => {\r\n-      startX = e.touches[0].clientX\r\n-    }\r\n-    const handleTouchEnd = (e: TouchEvent) => {\r\n-      const endX = e.changedTouches[0].clientX\r\n-      const diffX = startX - endX\r\n-      if (!isOpen && diffX > 50) setIsOpen(true)\r\n-      if (isOpen && diffX < -50) setIsOpen(false)\r\n-    }\r\n-    window.addEventListener('touchstart', handleTouchStart)\r\n-    window.addEventListener('touchend', handleTouchEnd)\r\n-    return () => {\r\n-      window.removeEventListener('touchstart', handleTouchStart)\r\n-      window.removeEventListener('touchend', handleTouchEnd)\r\n-    }\r\n-  }, [isOpen])\r\n-\r\n-  // Draggable floating icon menu (mobile style)\r\n-  useEffect(() => {\r\n-    const el = popupRef.current\r\n-    let offsetX = 0, offsetY = 0\r\n-    const handleTouchStart = (e: TouchEvent) => {\r\n-      offsetX = e.touches[0].clientX - dragPos.x\r\n-      offsetY = e.touches[0].clientY - dragPos.y\r\n-      const handleTouchMove = (e: TouchEvent) => {\r\n-        setDragPos({\r\n-          x: e.touches[0].clientX - offsetX,\r\n-          y: e.touches[0].clientY - offsetY\r\n-        })\r\n-      }\r\n-      const handleTouchEnd = () => {\r\n-        window.removeEventListener('touchmove', handleTouchMove)\r\n-        window.removeEventListener('touchend', handleTouchEnd)\r\n-      }\r\n-      window.addEventListener('touchmove', handleTouchMove)\r\n-      window.addEventListener('touchend', handleTouchEnd)\r\n-    }\r\n-    el?.addEventListener('touchstart', handleTouchStart)\r\n-    return () => el?.removeEventListener('touchstart', handleTouchStart)\r\n-  }, [dragPos])\r\n-\r\n-  const handleNavClick = (href: string) => {\r\n-    setActive(href)\r\n-    setIsOpen(true)\r\n-    const section = document.querySelector(href)\r\n-    section?.scrollIntoView({ behavior: 'smooth' })\r\n-  }\r\n-\r\n-  return (\r\n-    <>\r\n-      {/* Hamburger */}\r\n-      <div\r\n-        ref={dragRef}\r\n-        className=\"fixed z-[100] p-2 text-2xl text-blue-600 bg-white shadow-lg rounded-full cursor-pointer transition-all\"\r\n-        style={{\r\n-          top: '1rem',\r\n           right: isOpen ? '260px' : '1rem',\r\n           transition: 'right 0.3s ease-in-out'\r\n         }}\r\n         onClick={() => setIsOpen(!isOpen)}\r\n@@ -367,189 +182,4 @@\n   )\r\n }\r\n \r\n export default Navbar\r\n-'use client'\r\n-\r\n-import React, { useState, useRef, useEffect, JSX } from 'react'\r\n-import Link from 'next/link'\r\n-import {\r\n-  FaCode,\r\n-  FaProjectDiagram,\r\n-  FaUser,\r\n-  FaEnvelope,\r\n-  FaBars,\r\n-  FaTimes\r\n-} from 'react-icons/fa'\r\n-\r\n-type NavItem = {\r\n-  name: string\r\n-  href: string\r\n-  icon: JSX.Element\r\n-}\r\n-\r\n-const navItems: NavItem[] = [\r\n-  { name: 'About Me', href: '#about', icon: <FaUser /> },\r\n-  { name: 'Projects', href: '#projects', icon: <FaProjectDiagram /> },\r\n-  { name: 'Skills', href: '#skills', icon: <FaCode /> },\r\n-  { name: 'Contact', href: '#contact', icon: <FaEnvelope /> }\r\n-]\r\n-\r\n-const Navbar = () => {\r\n-  const [isOpen, setIsOpen] = useState(false)\r\n-  const [active, setActive] = useState<string>('#about')\r\n-  const [dragPos, setDragPos] = useState({ x: 20, y: 100 })\r\n-  const [popupVisible, setPopupVisible] = useState(true)\r\n-  const popupRef = useRef<HTMLDivElement>(null)\r\n-  const dragRef = useRef<HTMLDivElement>(null)\r\n-\r\n-  // Slide gesture support\r\n-  useEffect(() => {\r\n-    let startX = 0\r\n-    const handleTouchStart = (e: TouchEvent) => {\r\n-      startX = e.touches[0].clientX\r\n-    }\r\n-    const handleTouchEnd = (e: TouchEvent) => {\r\n-      const endX = e.changedTouches[0].clientX\r\n-      const diffX = startX - endX\r\n-      if (!isOpen && diffX > 50) setIsOpen(true)\r\n-      if (isOpen && diffX < -50) setIsOpen(false)\r\n-    }\r\n-    window.addEventListener('touchstart', handleTouchStart)\r\n-    window.addEventListener('touchend', handleTouchEnd)\r\n-    return () => {\r\n-      window.removeEventListener('touchstart', handleTouchStart)\r\n-      window.removeEventListener('touchend', handleTouchEnd)\r\n-    }\r\n-  }, [isOpen])\r\n-\r\n-  // Draggable floating icon menu (mobile style)\r\n-  useEffect(() => {\r\n-    const el = popupRef.current\r\n-    let offsetX = 0, offsetY = 0\r\n-    const handleTouchStart = (e: TouchEvent) => {\r\n-      offsetX = e.touches[0].clientX - dragPos.x\r\n-      offsetY = e.touches[0].clientY - dragPos.y\r\n-      const handleTouchMove = (e: TouchEvent) => {\r\n-        setDragPos({\r\n-          x: e.touches[0].clientX - offsetX,\r\n-          y: e.touches[0].clientY - offsetY\r\n-        })\r\n-      }\r\n-      const handleTouchEnd = () => {\r\n-        window.removeEventListener('touchmove', handleTouchMove)\r\n-        window.removeEventListener('touchend', handleTouchEnd)\r\n-      }\r\n-      window.addEventListener('touchmove', handleTouchMove)\r\n-      window.addEventListener('touchend', handleTouchEnd)\r\n-    }\r\n-    el?.addEventListener('touchstart', handleTouchStart)\r\n-    return () => el?.removeEventListener('touchstart', handleTouchStart)\r\n-  }, [dragPos])\r\n-\r\n-  const handleNavClick = (href: string) => {\r\n-    setActive(href)\r\n-    setIsOpen(true)\r\n-    const section = document.querySelector(href)\r\n-    section?.scrollIntoView({ behavior: 'smooth' })\r\n-  }\r\n-\r\n-  return (\r\n-    <>\r\n-      {/* Hamburger */}\r\n-      <div\r\n-        ref={dragRef}\r\n-        className=\"fixed z-[100] p-2 text-2xl text-blue-600 bg-white shadow-lg rounded-full cursor-pointer transition-all\"\r\n-        style={{\r\n-          top: '1rem',\r\n-          right: isOpen ? '260px' : '1rem',\r\n-          transition: 'right 0.3s ease-in-out'\r\n-        }}\r\n-        onClick={() => setIsOpen(!isOpen)}\r\n-      >\r\n-        <FaBars />\r\n-      </div>\r\n-\r\n-      {/* Sidebar */}\r\n-      <aside\r\n-        className={`fixed top-0 right-0 h-full w-[260px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n-          isOpen ? 'translate-x-0' : 'translate-x-full'\r\n-        }`}\r\n-      >\r\n-        <div className=\"p-4 text-2xl font-bold text-blue-600\">\r\n-          SmartCoderRahis\r\n-        </div>\r\n-        <ul className=\"flex flex-col gap-4 mt-6 px-4\">\r\n-          {navItems.map((item) => (\r\n-            <li key={item.name}>\r\n-              <button\r\n-                onClick={() => handleNavClick(item.href)}\r\n-                className={`w-full flex items-center gap-3 px-4 py-2 rounded-lg transition-all duration-500 transform ${\r\n-                  active === item.href\r\n-                    ? 'bg-blue-100 text-blue-600 border-r-4 border-blue-600 animate-slidein'\r\n-                    : 'text-gray-700 hover:text-blue-600 hover:bg-blue-50'\r\n-                }`}\r\n-              >\r\n-                <div\r\n-                  className={`text-xl p-2 rounded-full border transition-all duration-300 ${\r\n-                    active === item.href ? 'border-blue-600' : 'border-transparent'\r\n-                  }`}\r\n-                >\r\n-                  {item.icon}\r\n-                </div>\r\n-                {item.name}\r\n-              </button>\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-      </aside>\r\n-\r\n-      {/* Floating popup icons nav */}\r\n-      {!isOpen && popupVisible && (\r\n-        <div\r\n-          ref={popupRef}\r\n-          className=\"fixed z-40 flex flex-col gap-4 bg-white p-2 rounded-xl shadow-md\"\r\n-          style={{ top: dragPos.y + 80, left: dragPos.x }}\r\n-        >\r\n-          <button\r\n-            onClick={() => setPopupVisible(false)}\r\n-            className=\"self-end text-red-600 text-xl\"\r\n-          >\r\n-            <FaTimes />\r\n-          </button>\r\n-          {navItems.map((item) => (\r\n-            <button\r\n-              key={item.name}\r\n-              onClick={() => handleNavClick(item.href)}\r\n-              className={`p-2 text-2xl rounded-full transition-all duration-300 ${\r\n-                active === item.href\r\n-                  ? 'text-blue-600 border border-blue-600 animate-bounce'\r\n-                  : 'text-gray-600 hover:text-blue-600'\r\n-              }`}\r\n-            >\r\n-              {item.icon}\r\n-            </button>\r\n-          ))}\r\n-        </div>\r\n-      )}\r\n-\r\n-      {/* Slide in animation */}\r\n-      <style jsx>{`\r\n-        @keyframes slidein {\r\n-          from {\r\n-            transform: translateY(-10px);\r\n-            opacity: 0;\r\n-          }\r\n-          to {\r\n-            transform: translateY(0);\r\n-            opacity: 1;\r\n-          }\r\n-          .animate-slidein {\r\n-            animation: slidein 0.4s ease-out;\r\n-          }\r\n-        }\r\n-      `}</style>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Navbar\r\n"
                },
                {
                    "date": 1750519310502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n         ref={dragRef}\r\n         className=\"fixed z-[100] p-2 text-2xl text-blue-600 bg-white shadow-lg rounded-full cursor-pointer transition-all\"\r\n         style={{\r\n           top: '1rem',\r\n-          right: isOpen ? '260px' : '1rem',\r\n+          right: isOpen ? '265px' : '1rem',\r\n           transition: 'right 0.3s ease-in-out'\r\n         }}\r\n         onClick={() => setIsOpen(!isOpen)}\r\n       >\r\n"
                },
                {
                    "date": 1750519330913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n         ref={dragRef}\r\n         className=\"fixed z-[100] p-2 text-2xl text-blue-600 bg-white shadow-lg rounded-full cursor-pointer transition-all\"\r\n         style={{\r\n           top: '1rem',\r\n-          right: isOpen ? '265px' : '1rem',\r\n+          right: isOpen ? '270px' : '1rem',\r\n           transition: 'right 0.3s ease-in-out'\r\n         }}\r\n         onClick={() => setIsOpen(!isOpen)}\r\n       >\r\n@@ -100,9 +100,9 @@\n       </div>\r\n \r\n       {/* Sidebar */}\r\n       <aside\r\n-        className={`fixed top-0 right-0 h-full w-[260px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n+        className={`fixed top-0 right-0 h-full w-[250px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n           isOpen ? 'translate-x-0' : 'translate-x-full'\r\n         }`}\r\n       >\r\n         <div className=\"p-4 text-2xl font-bold text-blue-600\">\r\n"
                },
                {
                    "date": 1750519336564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n       </div>\r\n \r\n       {/* Sidebar */}\r\n       <aside\r\n-        className={`fixed top-0 right-0 h-full w-[250px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n+        className={`fixed top-0 right-0 h-full w-[230px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n           isOpen ? 'translate-x-0' : 'translate-x-full'\r\n         }`}\r\n       >\r\n         <div className=\"p-4 text-2xl font-bold text-blue-600\">\r\n"
                },
                {
                    "date": 1750519353191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n       </div>\r\n \r\n       {/* Sidebar */}\r\n       <aside\r\n-        className={`fixed top-0 right-0 h-full w-[230px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n+        className={`fixed top-0 right-0 h-full w-[210px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n           isOpen ? 'translate-x-0' : 'translate-x-full'\r\n         }`}\r\n       >\r\n         <div className=\"p-4 text-2xl font-bold text-blue-600\">\r\n"
                },
                {
                    "date": 1750519364615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,185 @@\n+'use client'\r\n+\r\n+import React, { useState, useRef, useEffect, JSX } from 'react'\r\n+import Link from 'next/link'\r\n+import {\r\n+  FaCode,\r\n+  FaProjectDiagram,\r\n+  FaUser,\r\n+  FaEnvelope,\r\n+  FaBars,\r\n+  FaTimes\r\n+} from 'react-icons/fa'\r\n+\r\n+type NavItem = {\r\n+  name: string\r\n+  href: string\r\n+  icon: JSX.Element\r\n+}\r\n+\r\n+const navItems: NavItem[] = [\r\n+  { name: 'About Me', href: '#about', icon: <FaUser /> },\r\n+  { name: 'Projects', href: '#projects', icon: <FaProjectDiagram /> },\r\n+  { name: 'Skills', href: '#skills', icon: <FaCode /> },\r\n+  { name: 'Contact', href: '#contact', icon: <FaEnvelope /> }\r\n+]\r\n+\r\n+const Navbar = () => {\r\n+  const [isOpen, setIsOpen] = useState(false)\r\n+  const [active, setActive] = useState<string>('#about')\r\n+  const [dragPos, setDragPos] = useState({ x: 20, y: 100 })\r\n+  const [popupVisible, setPopupVisible] = useState(true)\r\n+  const popupRef = useRef<HTMLDivElement>(null)\r\n+  const dragRef = useRef<HTMLDivElement>(null)\r\n+\r\n+  // Slide gesture support\r\n+  useEffect(() => {\r\n+    let startX = 0\r\n+    const handleTouchStart = (e: TouchEvent) => {\r\n+      startX = e.touches[0].clientX\r\n+    }\r\n+    const handleTouchEnd = (e: TouchEvent) => {\r\n+      const endX = e.changedTouches[0].clientX\r\n+      const diffX = startX - endX\r\n+      if (!isOpen && diffX > 50) setIsOpen(true)\r\n+      if (isOpen && diffX < -50) setIsOpen(false)\r\n+    }\r\n+    window.addEventListener('touchstart', handleTouchStart)\r\n+    window.addEventListener('touchend', handleTouchEnd)\r\n+    return () => {\r\n+      window.removeEventListener('touchstart', handleTouchStart)\r\n+      window.removeEventListener('touchend', handleTouchEnd)\r\n+    }\r\n+  }, [isOpen])\r\n+\r\n+  // Draggable floating icon menu (mobile style)\r\n+  useEffect(() => {\r\n+    const el = popupRef.current\r\n+    let offsetX = 0, offsetY = 0\r\n+    const handleTouchStart = (e: TouchEvent) => {\r\n+      offsetX = e.touches[0].clientX - dragPos.x\r\n+      offsetY = e.touches[0].clientY - dragPos.y\r\n+      const handleTouchMove = (e: TouchEvent) => {\r\n+        setDragPos({\r\n+          x: e.touches[0].clientX - offsetX,\r\n+          y: e.touches[0].clientY - offsetY\r\n+        })\r\n+      }\r\n+      const handleTouchEnd = () => {\r\n+        window.removeEventListener('touchmove', handleTouchMove)\r\n+        window.removeEventListener('touchend', handleTouchEnd)\r\n+      }\r\n+      window.addEventListener('touchmove', handleTouchMove)\r\n+      window.addEventListener('touchend', handleTouchEnd)\r\n+    }\r\n+    el?.addEventListener('touchstart', handleTouchStart)\r\n+    return () => el?.removeEventListener('touchstart', handleTouchStart)\r\n+  }, [dragPos])\r\n+\r\n+  const handleNavClick = (href: string) => {\r\n+    setActive(href)\r\n+    setIsOpen(true)\r\n+    const section = document.querySelector(href)\r\n+    section?.scrollIntoView({ behavior: 'smooth' })\r\n+  }\r\n+\r\n+  return (\r\n+    <>\r\n+      {/* Hamburger */}\r\n+      <div\r\n+        ref={dragRef}\r\n+        className=\"fixed z-[100] p-2 text-2xl text-blue-600 bg-white shadow-lg rounded-full cursor-pointer transition-all\"\r\n+        style={{\r\n+          top: '1rem',\r\n+          right: isOpen ? '230px' : '1rem',\r\n+          transition: 'right 0.3s ease-in-out'\r\n+        }}\r\n+        onClick={() => setIsOpen(!isOpen)}\r\n+      >\r\n+        <FaBars />\r\n+      </div>\r\n+\r\n+      {/* Sidebar */}\r\n+      <aside\r\n+        className={`fixed top-0 right-0 h-full w-[220px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n+          isOpen ? 'translate-x-0' : 'translate-x-full'\r\n+        }`}\r\n+      >\r\n+        <div className=\"p-4 text-2xl font-bold text-blue-600\">\r\n+          SmartCoderRahis\r\n+        </div>\r\n+        <ul className=\"flex flex-col gap-4 mt-6 px-4\">\r\n+          {navItems.map((item) => (\r\n+            <li key={item.name}>\r\n+              <button\r\n+                onClick={() => handleNavClick(item.href)}\r\n+                className={`w-full flex items-center gap-3 px-4 py-2 rounded-lg transition-all duration-500 transform ${\r\n+                  active === item.href\r\n+                    ? 'bg-blue-100 text-blue-600 border-r-4 border-blue-600 animate-slidein'\r\n+                    : 'text-gray-700 hover:text-blue-600 hover:bg-blue-50'\r\n+                }`}\r\n+              >\r\n+                <div\r\n+                  className={`text-xl p-2 rounded-full border transition-all duration-300 ${\r\n+                    active === item.href ? 'border-blue-600' : 'border-transparent'\r\n+                  }`}\r\n+                >\r\n+                  {item.icon}\r\n+                </div>\r\n+                {item.name}\r\n+              </button>\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+      </aside>\r\n+\r\n+      {/* Floating popup icons nav */}\r\n+      {!isOpen && popupVisible && (\r\n+        <div\r\n+          ref={popupRef}\r\n+          className=\"fixed z-40 flex flex-col gap-4 bg-white p-2 rounded-xl shadow-md\"\r\n+          style={{ top: dragPos.y + 80, left: dragPos.x }}\r\n+        >\r\n+          <button\r\n+            onClick={() => setPopupVisible(false)}\r\n+            className=\"self-end text-red-600 text-xl\"\r\n+          >\r\n+            <FaTimes />\r\n+          </button>\r\n+          {navItems.map((item) => (\r\n+            <button\r\n+              key={item.name}\r\n+              onClick={() => handleNavClick(item.href)}\r\n+              className={`p-2 text-2xl rounded-full transition-all duration-300 ${\r\n+                active === item.href\r\n+                  ? 'text-blue-600 border border-blue-600 animate-bounce'\r\n+                  : 'text-gray-600 hover:text-blue-600'\r\n+              }`}\r\n+            >\r\n+              {item.icon}\r\n+            </button>\r\n+          ))}\r\n+        </div>\r\n+      )}\r\n+\r\n+      {/* Slide in animation */}\r\n+      <style jsx>{`\r\n+        @keyframes slidein {\r\n+          from {\r\n+            transform: translateY(-10px);\r\n+            opacity: 0;\r\n+          }\r\n+          to {\r\n+            transform: translateY(0);\r\n+            opacity: 1;\r\n+          }\r\n+          .animate-slidein {\r\n+            animation: slidein 0.4s ease-out;\r\n+          }\r\n+        }\r\n+      `}</style>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Navbar\r\n"
                },
                {
                    "date": 1750519369872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n         ref={dragRef}\r\n         className=\"fixed z-[100] p-2 text-2xl text-blue-600 bg-white shadow-lg rounded-full cursor-pointer transition-all\"\r\n         style={{\r\n           top: '1rem',\r\n-          right: isOpen ? '230px' : '1rem',\r\n+          right: isOpen ? '20px' : '1rem',\r\n           transition: 'right 0.3s ease-in-out'\r\n         }}\r\n         onClick={() => setIsOpen(!isOpen)}\r\n       >\r\n@@ -182,189 +182,4 @@\n   )\r\n }\r\n \r\n export default Navbar\r\n-'use client'\r\n-\r\n-import React, { useState, useRef, useEffect, JSX } from 'react'\r\n-import Link from 'next/link'\r\n-import {\r\n-  FaCode,\r\n-  FaProjectDiagram,\r\n-  FaUser,\r\n-  FaEnvelope,\r\n-  FaBars,\r\n-  FaTimes\r\n-} from 'react-icons/fa'\r\n-\r\n-type NavItem = {\r\n-  name: string\r\n-  href: string\r\n-  icon: JSX.Element\r\n-}\r\n-\r\n-const navItems: NavItem[] = [\r\n-  { name: 'About Me', href: '#about', icon: <FaUser /> },\r\n-  { name: 'Projects', href: '#projects', icon: <FaProjectDiagram /> },\r\n-  { name: 'Skills', href: '#skills', icon: <FaCode /> },\r\n-  { name: 'Contact', href: '#contact', icon: <FaEnvelope /> }\r\n-]\r\n-\r\n-const Navbar = () => {\r\n-  const [isOpen, setIsOpen] = useState(false)\r\n-  const [active, setActive] = useState<string>('#about')\r\n-  const [dragPos, setDragPos] = useState({ x: 20, y: 100 })\r\n-  const [popupVisible, setPopupVisible] = useState(true)\r\n-  const popupRef = useRef<HTMLDivElement>(null)\r\n-  const dragRef = useRef<HTMLDivElement>(null)\r\n-\r\n-  // Slide gesture support\r\n-  useEffect(() => {\r\n-    let startX = 0\r\n-    const handleTouchStart = (e: TouchEvent) => {\r\n-      startX = e.touches[0].clientX\r\n-    }\r\n-    const handleTouchEnd = (e: TouchEvent) => {\r\n-      const endX = e.changedTouches[0].clientX\r\n-      const diffX = startX - endX\r\n-      if (!isOpen && diffX > 50) setIsOpen(true)\r\n-      if (isOpen && diffX < -50) setIsOpen(false)\r\n-    }\r\n-    window.addEventListener('touchstart', handleTouchStart)\r\n-    window.addEventListener('touchend', handleTouchEnd)\r\n-    return () => {\r\n-      window.removeEventListener('touchstart', handleTouchStart)\r\n-      window.removeEventListener('touchend', handleTouchEnd)\r\n-    }\r\n-  }, [isOpen])\r\n-\r\n-  // Draggable floating icon menu (mobile style)\r\n-  useEffect(() => {\r\n-    const el = popupRef.current\r\n-    let offsetX = 0, offsetY = 0\r\n-    const handleTouchStart = (e: TouchEvent) => {\r\n-      offsetX = e.touches[0].clientX - dragPos.x\r\n-      offsetY = e.touches[0].clientY - dragPos.y\r\n-      const handleTouchMove = (e: TouchEvent) => {\r\n-        setDragPos({\r\n-          x: e.touches[0].clientX - offsetX,\r\n-          y: e.touches[0].clientY - offsetY\r\n-        })\r\n-      }\r\n-      const handleTouchEnd = () => {\r\n-        window.removeEventListener('touchmove', handleTouchMove)\r\n-        window.removeEventListener('touchend', handleTouchEnd)\r\n-      }\r\n-      window.addEventListener('touchmove', handleTouchMove)\r\n-      window.addEventListener('touchend', handleTouchEnd)\r\n-    }\r\n-    el?.addEventListener('touchstart', handleTouchStart)\r\n-    return () => el?.removeEventListener('touchstart', handleTouchStart)\r\n-  }, [dragPos])\r\n-\r\n-  const handleNavClick = (href: string) => {\r\n-    setActive(href)\r\n-    setIsOpen(true)\r\n-    const section = document.querySelector(href)\r\n-    section?.scrollIntoView({ behavior: 'smooth' })\r\n-  }\r\n-\r\n-  return (\r\n-    <>\r\n-      {/* Hamburger */}\r\n-      <div\r\n-        ref={dragRef}\r\n-        className=\"fixed z-[100] p-2 text-2xl text-blue-600 bg-white shadow-lg rounded-full cursor-pointer transition-all\"\r\n-        style={{\r\n-          top: '1rem',\r\n-          right: isOpen ? '270px' : '1rem',\r\n-          transition: 'right 0.3s ease-in-out'\r\n-        }}\r\n-        onClick={() => setIsOpen(!isOpen)}\r\n-      >\r\n-        <FaBars />\r\n-      </div>\r\n-\r\n-      {/* Sidebar */}\r\n-      <aside\r\n-        className={`fixed top-0 right-0 h-full w-[210px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n-          isOpen ? 'translate-x-0' : 'translate-x-full'\r\n-        }`}\r\n-      >\r\n-        <div className=\"p-4 text-2xl font-bold text-blue-600\">\r\n-          SmartCoderRahis\r\n-        </div>\r\n-        <ul className=\"flex flex-col gap-4 mt-6 px-4\">\r\n-          {navItems.map((item) => (\r\n-            <li key={item.name}>\r\n-              <button\r\n-                onClick={() => handleNavClick(item.href)}\r\n-                className={`w-full flex items-center gap-3 px-4 py-2 rounded-lg transition-all duration-500 transform ${\r\n-                  active === item.href\r\n-                    ? 'bg-blue-100 text-blue-600 border-r-4 border-blue-600 animate-slidein'\r\n-                    : 'text-gray-700 hover:text-blue-600 hover:bg-blue-50'\r\n-                }`}\r\n-              >\r\n-                <div\r\n-                  className={`text-xl p-2 rounded-full border transition-all duration-300 ${\r\n-                    active === item.href ? 'border-blue-600' : 'border-transparent'\r\n-                  }`}\r\n-                >\r\n-                  {item.icon}\r\n-                </div>\r\n-                {item.name}\r\n-              </button>\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-      </aside>\r\n-\r\n-      {/* Floating popup icons nav */}\r\n-      {!isOpen && popupVisible && (\r\n-        <div\r\n-          ref={popupRef}\r\n-          className=\"fixed z-40 flex flex-col gap-4 bg-white p-2 rounded-xl shadow-md\"\r\n-          style={{ top: dragPos.y + 80, left: dragPos.x }}\r\n-        >\r\n-          <button\r\n-            onClick={() => setPopupVisible(false)}\r\n-            className=\"self-end text-red-600 text-xl\"\r\n-          >\r\n-            <FaTimes />\r\n-          </button>\r\n-          {navItems.map((item) => (\r\n-            <button\r\n-              key={item.name}\r\n-              onClick={() => handleNavClick(item.href)}\r\n-              className={`p-2 text-2xl rounded-full transition-all duration-300 ${\r\n-                active === item.href\r\n-                  ? 'text-blue-600 border border-blue-600 animate-bounce'\r\n-                  : 'text-gray-600 hover:text-blue-600'\r\n-              }`}\r\n-            >\r\n-              {item.icon}\r\n-            </button>\r\n-          ))}\r\n-        </div>\r\n-      )}\r\n-\r\n-      {/* Slide in animation */}\r\n-      <style jsx>{`\r\n-        @keyframes slidein {\r\n-          from {\r\n-            transform: translateY(-10px);\r\n-            opacity: 0;\r\n-          }\r\n-          to {\r\n-            transform: translateY(0);\r\n-            opacity: 1;\r\n-          }\r\n-          .animate-slidein {\r\n-            animation: slidein 0.4s ease-out;\r\n-          }\r\n-        }\r\n-      `}</style>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Navbar\r\n"
                },
                {
                    "date": 1750519498071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n         ref={dragRef}\r\n         className=\"fixed z-[100] p-2 text-2xl text-blue-600 bg-white shadow-lg rounded-full cursor-pointer transition-all\"\r\n         style={{\r\n           top: '1rem',\r\n-          right: isOpen ? '20px' : '1rem',\r\n+          right: isOpen ? '235px' : '1rem',\r\n           transition: 'right 0.3s ease-in-out'\r\n         }}\r\n         onClick={() => setIsOpen(!isOpen)}\r\n       >\r\n@@ -119,9 +119,9 @@\n                     : 'text-gray-700 hover:text-blue-600 hover:bg-blue-50'\r\n                 }`}\r\n               >\r\n                 <div\r\n-                  className={`text-xl p-2 rounded-full border transition-all duration-300 ${\r\n+                  className={`text-xl p-2 rounded-full  border transition-all duration-300 ${\r\n                     active === item.href ? 'border-blue-600' : 'border-transparent'\r\n                   }`}\r\n                 >\r\n                   {item.icon}\r\n"
                },
                {
                    "date": 1750519503500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,9 @@\n                     : 'text-gray-700 hover:text-blue-600 hover:bg-blue-50'\r\n                 }`}\r\n               >\r\n                 <div\r\n-                  className={`text-xl p-2 rounded-full  border transition-all duration-300 ${\r\n+                  className={`text-xl p-2 rounded-full bg-blue- border transition-all duration-300 ${\r\n                     active === item.href ? 'border-blue-600' : 'border-transparent'\r\n                   }`}\r\n                 >\r\n                   {item.icon}\r\n"
                },
                {
                    "date": 1750519516153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,9 @@\n                     : 'text-gray-700 hover:text-blue-600 hover:bg-blue-50'\r\n                 }`}\r\n               >\r\n                 <div\r\n-                  className={`text-xl p-2 rounded-full bg-blue- border transition-all duration-300 ${\r\n+                  className={`text-xl p-2 rounded-full bg-blue-100 border transition-all duration-300 ${\r\n                     active === item.href ? 'border-blue-600' : 'border-transparent'\r\n                   }`}\r\n                 >\r\n                   {item.icon}\r\n"
                },
                {
                    "date": 1750519552360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,9 +104,9 @@\n         className={`fixed top-0 right-0 h-full w-[220px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n           isOpen ? 'translate-x-0' : 'translate-x-full'\r\n         }`}\r\n       >\r\n-        <div className=\"p-4 text-2xl font-bold text-blue-600\">\r\n+        <div className=\"p-4 text-1xl font-bold text-blue-600\">\r\n           SmartCoderRahis\r\n         </div>\r\n         <ul className=\"flex flex-col gap-4 mt-6 px-4\">\r\n           {navItems.map((item) => (\r\n"
                },
                {
                    "date": 1750519559547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,9 +104,9 @@\n         className={`fixed top-0 right-0 h-full w-[220px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n           isOpen ? 'translate-x-0' : 'translate-x-full'\r\n         }`}\r\n       >\r\n-        <div className=\"p-4 text-1xl font-bold text-blue-600\">\r\n+        <div className=\"p-4 text-xl font-bold text-blue-600\">\r\n           SmartCoderRahis\r\n         </div>\r\n         <ul className=\"flex flex-col gap-4 mt-6 px-4\">\r\n           {navItems.map((item) => (\r\n"
                },
                {
                    "date": 1750519595502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n       >\r\n         <div className=\"p-4 text-2xl font-bold text-blue-600\">\r\n           SmartCoderRahis\r\n         </div>\r\n-        <ul className=\"flex flex-col gap-4 mt-6 px-4\">\r\n+        <ul className=\"flex flex-col gap-4 mt-6  px-4\">\r\n           {navItems.map((item) => (\r\n             <li key={item.name}>\r\n               <button\r\n                 onClick={() => handleNavClick(item.href)}\r\n"
                },
                {
                    "date": 1750520946043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,186 @@\n+'use client'\r\n+\r\n+import React, { useState, useRef, useEffect, JSX } from 'react'\r\n+import Link from 'next/link'\r\n+import Image from 'next/image'\r\n+import {\r\n+  FaCode,\r\n+  FaProjectDiagram,\r\n+  FaUser,\r\n+  FaEnvelope,\r\n+  FaBars,\r\n+  FaTimes\r\n+} from 'react-icons/fa'\r\n+\r\n+type NavItem = {\r\n+  name: string\r\n+  href: string\r\n+  icon: JSX.Element\r\n+}\r\n+\r\n+const navItems: NavItem[] = [\r\n+  { name: 'About Me', href: '#about', icon: <FaUser /> },\r\n+  { name: 'Projects', href: '#projects', icon: <FaProjectDiagram /> },\r\n+  { name: 'Skills', href: '#skills', icon: <FaCode /> },\r\n+  { name: 'Contact', href: '#contact', icon: <FaEnvelope /> }\r\n+]\r\n+\r\n+const Navbar = () => {\r\n+  const [isOpen, setIsOpen] = useState(false)\r\n+  const [active, setActive] = useState<string>('#about')\r\n+  const [dragPos, setDragPos] = useState({ x: 20, y: 100 })\r\n+  const [popupVisible, setPopupVisible] = useState(true)\r\n+  const popupRef = useRef<HTMLDivElement>(null)\r\n+  const dragRef = useRef<HTMLDivElement>(null)\r\n+\r\n+  // Slide gesture support\r\n+  useEffect(() => {\r\n+    let startX = 0\r\n+    const handleTouchStart = (e: TouchEvent) => {\r\n+      startX = e.touches[0].clientX\r\n+    }\r\n+    const handleTouchEnd = (e: TouchEvent) => {\r\n+      const endX = e.changedTouches[0].clientX\r\n+      const diffX = startX - endX\r\n+      if (!isOpen && diffX > 50) setIsOpen(true)\r\n+      if (isOpen && diffX < -50) setIsOpen(false)\r\n+    }\r\n+    window.addEventListener('touchstart', handleTouchStart)\r\n+    window.addEventListener('touchend', handleTouchEnd)\r\n+    return () => {\r\n+      window.removeEventListener('touchstart', handleTouchStart)\r\n+      window.removeEventListener('touchend', handleTouchEnd)\r\n+    }\r\n+  }, [isOpen])\r\n+\r\n+  // Draggable floating icon menu (mobile style)\r\n+  useEffect(() => {\r\n+    const el = popupRef.current\r\n+    let offsetX = 0, offsetY = 0\r\n+    const handleTouchStart = (e: TouchEvent) => {\r\n+      offsetX = e.touches[0].clientX - dragPos.x\r\n+      offsetY = e.touches[0].clientY - dragPos.y\r\n+      const handleTouchMove = (e: TouchEvent) => {\r\n+        setDragPos({\r\n+          x: e.touches[0].clientX - offsetX,\r\n+          y: e.touches[0].clientY - offsetY\r\n+        })\r\n+      }\r\n+      const handleTouchEnd = () => {\r\n+        window.removeEventListener('touchmove', handleTouchMove)\r\n+        window.removeEventListener('touchend', handleTouchEnd)\r\n+      }\r\n+      window.addEventListener('touchmove', handleTouchMove)\r\n+      window.addEventListener('touchend', handleTouchEnd)\r\n+    }\r\n+    el?.addEventListener('touchstart', handleTouchStart)\r\n+    return () => el?.removeEventListener('touchstart', handleTouchStart)\r\n+  }, [dragPos])\r\n+\r\n+  const handleNavClick = (href: string) => {\r\n+    setActive(href)\r\n+    setIsOpen(true)\r\n+    const section = document.querySelector(href)\r\n+    section?.scrollIntoView({ behavior: 'smooth' })\r\n+  }\r\n+\r\n+  return (\r\n+    <>\r\n+      {/* Hamburger */}\r\n+      <div\r\n+        ref={dragRef}\r\n+        className=\"fixed z-[100] p-2 text-2xl text-blue-600 bg-white shadow-lg rounded-full cursor-pointer transition-all\"\r\n+        style={{\r\n+          top: '1rem',\r\n+          right: isOpen ? '235px' : '1rem',\r\n+          transition: 'right 0.3s ease-in-out'\r\n+        }}\r\n+        onClick={() => setIsOpen(!isOpen)}\r\n+      >\r\n+        <FaBars />\r\n+      </div>\r\n+\r\n+      {/* Sidebar */}\r\n+      <aside\r\n+        className={`fixed top-0 right-0 h-full w-[220px] bg-white shadow-xl transform transition-transform duration-300 z-50 ${\r\n+          isOpen ? 'translate-x-0' : 'translate-x-full'\r\n+        }`}\r\n+      >\r\n+        <div className=\"p-4 text-2xl font-bold text-blue-600\">\r\n+          <Image></Image>\r\n+        </div>\r\n+        <ul className=\"flex flex-col gap-4 mt-1 border-t border-gray-400 py-5 px-4\">\r\n+          {navItems.map((item) => (\r\n+            <li key={item.name}>\r\n+              <button\r\n+                onClick={() => handleNavClick(item.href)}\r\n+                className={`w-full flex items-center gap-3 px-4 py-2 rounded-lg transition-all duration-500 transform ${\r\n+                  active === item.href\r\n+                    ? 'bg-blue-100 text-blue-600 border-r-4 border-blue-600 animate-slidein'\r\n+                    : 'text-gray-700 hover:text-blue-600 hover:bg-blue-50'\r\n+                }`}\r\n+              >\r\n+                <div\r\n+                  className={`text-xl p-2 rounded-full bg-blue-100 border transition-all duration-300 ${\r\n+                    active === item.href ? 'border-blue-600' : 'border-transparent'\r\n+                  }`}\r\n+                >\r\n+                  {item.icon}\r\n+                </div>\r\n+                {item.name}\r\n+              </button>\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+      </aside>\r\n+\r\n+      {/* Floating popup icons nav */}\r\n+      {!isOpen && popupVisible && (\r\n+        <div\r\n+          ref={popupRef}\r\n+          className=\"fixed z-40 flex flex-col gap-4 bg-white p-2 rounded-xl shadow-md\"\r\n+          style={{ top: dragPos.y + 80, left: dragPos.x }}\r\n+        >\r\n+          <button\r\n+            onClick={() => setPopupVisible(false)}\r\n+            className=\"self-end text-red-600 text-xl\"\r\n+          >\r\n+            <FaTimes />\r\n+          </button>\r\n+          {navItems.map((item) => (\r\n+            <button\r\n+              key={item.name}\r\n+              onClick={() => handleNavClick(item.href)}\r\n+              className={`p-2 text-2xl rounded-full transition-all duration-300 ${\r\n+                active === item.href\r\n+                  ? 'text-blue-600 border border-blue-600 animate-bounce'\r\n+                  : 'text-gray-600 hover:text-blue-600'\r\n+              }`}\r\n+            >\r\n+              {item.icon}\r\n+            </button>\r\n+          ))}\r\n+        </div>\r\n+      )}\r\n+\r\n+      {/* Slide in animation */}\r\n+      <style jsx>{`\r\n+        @keyframes slidein {\r\n+          from {\r\n+            transform: translateY(-10px);\r\n+            opacity: 0;\r\n+          }\r\n+          to {\r\n+            transform: translateY(0);\r\n+            opacity: 1;\r\n+          }\r\n+          .animate-slidein {\r\n+            animation: slidein 0.4s ease-out;\r\n+          }\r\n+        }\r\n+      `}</style>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Navbar\r\n"
                }
            ],
            "date": 1750518076206,
            "name": "Commit-0",
            "content": "'use client'\r\n\r\nimport React, { useState } from 'react'\r\nimport Link from 'next/link'\r\nimport { FaCode, FaProjectDiagram, FaUser, FaEnvelope, FaBars, FaTimes } from 'react-icons/fa'\r\n\r\ntype NavItem = {\r\n  name: string\r\n  href: string\r\n  icon: JSX.Element\r\n}\r\n\r\nconst navItems: NavItem[] = [\r\n  { name: 'About Me', href: '#about', icon: <FaUser /> },\r\n  { name: 'Projects', href: '#projects', icon: <FaProjectDiagram /> },\r\n  { name: 'Skills', href: '#skills', icon: <FaCode /> },\r\n  { name: 'Contact', href: '#contact', icon: <FaEnvelope /> }\r\n]\r\n\r\nconst Navbar = () => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  const toggleMenu = () => setIsOpen(!isOpen)\r\n\r\n  return (\r\n    <nav className=\"bg-white shadow-md fixed top-0 left-0 right-0 z-50\">\r\n      <div className=\"max-w-6xl mx-auto px-4 flex justify-between items-center h-16\">\r\n        \r\n        {/* Logo */}\r\n        <h1 className=\"text-2xl font-bold text-blue-600\">SmartCoderRahis</h1>\r\n\r\n        {/* Desktop Menu */}\r\n        <ul className=\"hidden md:flex gap-8\">\r\n          {navItems.map((item) => (\r\n            <li key={item.name}>\r\n              <Link href={item.href} className=\"flex items-center gap-2 text-gray-700 hover:text-blue-600 transition\">\r\n                {item.icon}\r\n                {item.name}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        {/* Mobile Menu Button */}\r\n        <div className=\"md:hidden\">\r\n          <button onClick={toggleMenu} className=\"text-2xl text-gray-700\">\r\n            {isOpen ? <FaTimes /> : <FaBars />}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Mobile Dropdown */}\r\n      {isOpen && (\r\n        <ul className=\"md:hidden bg-white px-4 pb-4 flex flex-col gap-4 shadow-md\">\r\n          {navItems.map((item) => (\r\n            <li key={item.name}>\r\n              <Link\r\n                href={item.href}\r\n                onClick={() => setIsOpen(false)}\r\n                className=\"flex items-center gap-2 text-gray-700 hover:text-blue-600 transition\"\r\n              >\r\n                {item.icon}\r\n                {item.name}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n"
        }
    ]
}